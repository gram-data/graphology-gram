{"version":3,"file":"graphology-gram.umd.development.js","sources":["../node_modules/bail/index.js","../node_modules/is-buffer/index.js","../node_modules/extend/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/wrap.js","../node_modules/trough/index.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/core.js","../node_modules/vfile/lib/index.js","../node_modules/vfile/index.js","../node_modules/unified/index.js","../node_modules/nearley/lib/nearley.js","../node_modules/moo/moo.js","../node_modules/@gram-data/gram-ast/src/gram-tokens.ts","../node_modules/@gram-data/gram-ast/src/index.ts","../node_modules/@gram-data/gram-builder/src/index.ts","../node_modules/@gram-data/gram-parse/src/gram-grammar.ts","../node_modules/@gram-data/gram-parse/src/gram-errors.ts","../node_modules/@gram-data/gram-parse/src/gram-parser-plugin.ts","../node_modules/nanoid/index.browser.js","../node_modules/unist-util-is/convert.js","../node_modules/unist-util-visit-parents/color.browser.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/@gram-data/gram-identity/src/identity-alphabets.ts","../node_modules/@gram-data/gram-identity/src/counter-generator.ts","../node_modules/@gram-data/gram-identity/src/nanoid-generator.ts","../node_modules/@gram-data/gram-identity/src/gram-identity-plugin.ts","../node_modules/@gram-data/gram-value/src/gram-value.ts","../node_modules/@gram-data/gram-value/src/gram-value-plugin.ts","../node_modules/@gram-data/gram-preset-basic/src/index.ts","../node_modules/@gram-data/gram-stringify/src/gram-stringify.ts","../node_modules/@gram-data/gram/src/index.ts","../node_modules/@gram-data/gram-ops/src/index.ts","../src/index.ts"],"sourcesContent":["'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(err, tree, file) {\n    if (err) {\n      next(err)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n  var file = ctx.file\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    file.contents = result\n  } else {\n    file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var frozen = false\n  var freezeIndex = -1\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var length = attachers.length\n    var index = -1\n\n    while (++index < length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var plugin\n    var options\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n      plugin = values[0]\n      options = values[1]\n      transformer = null\n\n      if (options === false) {\n        continue\n      }\n\n      if (options === true) {\n        values[1] = undefined\n      }\n\n      transformer = plugin.apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n\n        namespace[key] = value\n\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var length\n      var index\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        length = plugins.length\n        index = -1\n\n        while (++index < length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var length = attachers.length\n    var index = -1\n    var entry\n\n    while (++index < length) {\n      entry = attachers[index]\n\n      if (entry[0] === plugin) {\n        return entry\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(err, tree, file) {\n        tree = tree || node\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var complete = false\n    var result\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(err, tree) {\n      complete = true\n      bail(err)\n      result = tree\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(err) {\n        if (err) {\n          reject(err)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var complete = false\n    var file\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(err) {\n      complete = true\n      bail(err)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","(function(root, factory) {\n    if (typeof module === 'object' && module.exports) {\n        module.exports = factory();\n    } else {\n        root.nearley = factory();\n    }\n}(this, function() {\n\n    function Rule(name, symbols, postprocess) {\n        this.id = ++Rule.highestId;\n        this.name = name;\n        this.symbols = symbols;        // a list of literal | regex class | nonterminal\n        this.postprocess = postprocess;\n        return this;\n    }\n    Rule.highestId = 0;\n\n    Rule.prototype.toString = function(withCursorAt) {\n        var symbolSequence = (typeof withCursorAt === \"undefined\")\n                             ? this.symbols.map(getSymbolShortDisplay).join(' ')\n                             : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')\n                                 + \" ● \"\n                                 + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );\n        return this.name + \" → \" + symbolSequence;\n    }\n\n\n    // a State is a rule at a position from a given starting point in the input stream (reference)\n    function State(rule, dot, reference, wantedBy) {\n        this.rule = rule;\n        this.dot = dot;\n        this.reference = reference;\n        this.data = [];\n        this.wantedBy = wantedBy;\n        this.isComplete = this.dot === rule.symbols.length;\n    }\n\n    State.prototype.toString = function() {\n        return \"{\" + this.rule.toString(this.dot) + \"}, from: \" + (this.reference || 0);\n    };\n\n    State.prototype.nextState = function(child) {\n        var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);\n        state.left = this;\n        state.right = child;\n        if (state.isComplete) {\n            state.data = state.build();\n            // Having right set here will prevent the right state and its children\n            // form being garbage collected\n            state.right = undefined;\n        }\n        return state;\n    };\n\n    State.prototype.build = function() {\n        var children = [];\n        var node = this;\n        do {\n            children.push(node.right.data);\n            node = node.left;\n        } while (node.left);\n        children.reverse();\n        return children;\n    };\n\n    State.prototype.finish = function() {\n        if (this.rule.postprocess) {\n            this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);\n        }\n    };\n\n\n    function Column(grammar, index) {\n        this.grammar = grammar;\n        this.index = index;\n        this.states = [];\n        this.wants = {}; // states indexed by the non-terminal they expect\n        this.scannable = []; // list of states that expect a token\n        this.completed = {}; // states that are nullable\n    }\n\n\n    Column.prototype.process = function(nextColumn) {\n        var states = this.states;\n        var wants = this.wants;\n        var completed = this.completed;\n\n        for (var w = 0; w < states.length; w++) { // nb. we push() during iteration\n            var state = states[w];\n\n            if (state.isComplete) {\n                state.finish();\n                if (state.data !== Parser.fail) {\n                    // complete\n                    var wantedBy = state.wantedBy;\n                    for (var i = wantedBy.length; i--; ) { // this line is hot\n                        var left = wantedBy[i];\n                        this.complete(left, state);\n                    }\n\n                    // special-case nullables\n                    if (state.reference === this.index) {\n                        // make sure future predictors of this rule get completed.\n                        var exp = state.rule.name;\n                        (this.completed[exp] = this.completed[exp] || []).push(state);\n                    }\n                }\n\n            } else {\n                // queue scannable states\n                var exp = state.rule.symbols[state.dot];\n                if (typeof exp !== 'string') {\n                    this.scannable.push(state);\n                    continue;\n                }\n\n                // predict\n                if (wants[exp]) {\n                    wants[exp].push(state);\n\n                    if (completed.hasOwnProperty(exp)) {\n                        var nulls = completed[exp];\n                        for (var i = 0; i < nulls.length; i++) {\n                            var right = nulls[i];\n                            this.complete(state, right);\n                        }\n                    }\n                } else {\n                    wants[exp] = [state];\n                    this.predict(exp);\n                }\n            }\n        }\n    }\n\n    Column.prototype.predict = function(exp) {\n        var rules = this.grammar.byName[exp] || [];\n\n        for (var i = 0; i < rules.length; i++) {\n            var r = rules[i];\n            var wantedBy = this.wants[exp];\n            var s = new State(r, 0, this.index, wantedBy);\n            this.states.push(s);\n        }\n    }\n\n    Column.prototype.complete = function(left, right) {\n        var copy = left.nextState(right);\n        this.states.push(copy);\n    }\n\n\n    function Grammar(rules, start) {\n        this.rules = rules;\n        this.start = start || this.rules[0].name;\n        var byName = this.byName = {};\n        this.rules.forEach(function(rule) {\n            if (!byName.hasOwnProperty(rule.name)) {\n                byName[rule.name] = [];\n            }\n            byName[rule.name].push(rule);\n        });\n    }\n\n    // So we can allow passing (rules, start) directly to Parser for backwards compatibility\n    Grammar.fromCompiled = function(rules, start) {\n        var lexer = rules.Lexer;\n        if (rules.ParserStart) {\n          start = rules.ParserStart;\n          rules = rules.ParserRules;\n        }\n        var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });\n        var g = new Grammar(rules, start);\n        g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable\n        return g;\n    }\n\n\n    function StreamLexer() {\n      this.reset(\"\");\n    }\n\n    StreamLexer.prototype.reset = function(data, state) {\n        this.buffer = data;\n        this.index = 0;\n        this.line = state ? state.line : 1;\n        this.lastLineBreak = state ? -state.col : 0;\n    }\n\n    StreamLexer.prototype.next = function() {\n        if (this.index < this.buffer.length) {\n            var ch = this.buffer[this.index++];\n            if (ch === '\\n') {\n              this.line += 1;\n              this.lastLineBreak = this.index;\n            }\n            return {value: ch};\n        }\n    }\n\n    StreamLexer.prototype.save = function() {\n      return {\n        line: this.line,\n        col: this.index - this.lastLineBreak,\n      }\n    }\n\n    StreamLexer.prototype.formatError = function(token, message) {\n        // nb. this gets called after consuming the offending token,\n        // so the culprit is index-1\n        var buffer = this.buffer;\n        if (typeof buffer === 'string') {\n            var lines = buffer\n                .split(\"\\n\")\n                .slice(\n                    Math.max(0, this.line - 5), \n                    this.line\n                );\n\n            var nextLineBreak = buffer.indexOf('\\n', this.index);\n            if (nextLineBreak === -1) nextLineBreak = buffer.length;\n            var col = this.index - this.lastLineBreak;\n            var lastLineDigits = String(this.line).length;\n            message += \" at line \" + this.line + \" col \" + col + \":\\n\\n\";\n            message += lines\n                .map(function(line, i) {\n                    return pad(this.line - lines.length + i + 1, lastLineDigits) + \" \" + line;\n                }, this)\n                .join(\"\\n\");\n            message += \"\\n\" + pad(\"\", lastLineDigits + col) + \"^\\n\";\n            return message;\n        } else {\n            return message + \" at index \" + (this.index - 1);\n        }\n\n        function pad(n, length) {\n            var s = String(n);\n            return Array(length - s.length + 1).join(\" \") + s;\n        }\n    }\n\n    function Parser(rules, start, options) {\n        if (rules instanceof Grammar) {\n            var grammar = rules;\n            var options = start;\n        } else {\n            var grammar = Grammar.fromCompiled(rules, start);\n        }\n        this.grammar = grammar;\n\n        // Read options\n        this.options = {\n            keepHistory: false,\n            lexer: grammar.lexer || new StreamLexer,\n        };\n        for (var key in (options || {})) {\n            this.options[key] = options[key];\n        }\n\n        // Setup lexer\n        this.lexer = this.options.lexer;\n        this.lexerState = undefined;\n\n        // Setup a table\n        var column = new Column(grammar, 0);\n        var table = this.table = [column];\n\n        // I could be expecting anything.\n        column.wants[grammar.start] = [];\n        column.predict(grammar.start);\n        // TODO what if start rule is nullable?\n        column.process();\n        this.current = 0; // token index\n    }\n\n    // create a reserved token for indicating a parse fail\n    Parser.fail = {};\n\n    Parser.prototype.feed = function(chunk) {\n        var lexer = this.lexer;\n        lexer.reset(chunk, this.lexerState);\n\n        var token;\n        while (true) {\n            try {\n                token = lexer.next();\n                if (!token) {\n                    break;\n                }\n            } catch (e) {\n                // Create the next column so that the error reporter\n                // can display the correctly predicted states.\n                var nextColumn = new Column(this.grammar, this.current + 1);\n                this.table.push(nextColumn);\n                var err = new Error(this.reportLexerError(e));\n                err.offset = this.current;\n                err.token = e.token;\n                throw err;\n            }\n            // We add new states to table[current+1]\n            var column = this.table[this.current];\n\n            // GC unused states\n            if (!this.options.keepHistory) {\n                delete this.table[this.current - 1];\n            }\n\n            var n = this.current + 1;\n            var nextColumn = new Column(this.grammar, n);\n            this.table.push(nextColumn);\n\n            // Advance all tokens that expect the symbol\n            var literal = token.text !== undefined ? token.text : token.value;\n            var value = lexer.constructor === StreamLexer ? token.value : token;\n            var scannable = column.scannable;\n            for (var w = scannable.length; w--; ) {\n                var state = scannable[w];\n                var expect = state.rule.symbols[state.dot];\n                // Try to consume the token\n                // either regex or literal\n                if (expect.test ? expect.test(value) :\n                    expect.type ? expect.type === token.type\n                                : expect.literal === literal) {\n                    // Add it\n                    var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});\n                    nextColumn.states.push(next);\n                }\n            }\n\n            // Next, for each of the rules, we either\n            // (a) complete it, and try to see if the reference row expected that\n            //     rule\n            // (b) predict the next nonterminal it expects by adding that\n            //     nonterminal's start state\n            // To prevent duplication, we also keep track of rules we have already\n            // added\n\n            nextColumn.process();\n\n            // If needed, throw an error:\n            if (nextColumn.states.length === 0) {\n                // No states at all! This is not good.\n                var err = new Error(this.reportError(token));\n                err.offset = this.current;\n                err.token = token;\n                throw err;\n            }\n\n            // maybe save lexer state\n            if (this.options.keepHistory) {\n              column.lexerState = lexer.save()\n            }\n\n            this.current++;\n        }\n        if (column) {\n          this.lexerState = lexer.save()\n        }\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n\n        // Allow chaining, for whatever it's worth\n        return this;\n    };\n\n    Parser.prototype.reportLexerError = function(lexerError) {\n        var tokenDisplay, lexerMessage;\n        // Planning to add a token property to moo's thrown error\n        // even on erroring tokens to be used in error display below\n        var token = lexerError.token;\n        if (token) {\n            tokenDisplay = \"input \" + JSON.stringify(token.text[0]) + \" (lexer error)\";\n            lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        } else {\n            tokenDisplay = \"input (lexer error)\";\n            lexerMessage = lexerError.message;\n        }\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportError = function(token) {\n        var tokenDisplay = (token.type ? token.type + \" token: \" : \"\") + JSON.stringify(token.value !== undefined ? token.value : token);\n        var lexerMessage = this.lexer.formatError(token, \"Syntax error\");\n        return this.reportErrorCommon(lexerMessage, tokenDisplay);\n    };\n\n    Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {\n        var lines = [];\n        lines.push(lexerMessage);\n        var lastColumnIndex = this.table.length - 2;\n        var lastColumn = this.table[lastColumnIndex];\n        var expectantStates = lastColumn.states\n            .filter(function(state) {\n                var nextSymbol = state.rule.symbols[state.dot];\n                return nextSymbol && typeof nextSymbol !== \"string\";\n            });\n\n        if (expectantStates.length === 0) {\n            lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\\n');\n            this.displayStateStack(lastColumn.states, lines);\n        } else {\n            lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\\n');\n            // Display a \"state stack\" for each expectant state\n            // - which shows you how this state came to be, step by step.\n            // If there is more than one derivation, we only display the first one.\n            var stateStacks = expectantStates\n                .map(function(state) {\n                    return this.buildFirstStateStack(state, []) || [state];\n                }, this);\n            // Display each state that is expecting a terminal symbol next.\n            stateStacks.forEach(function(stateStack) {\n                var state = stateStack[0];\n                var nextSymbol = state.rule.symbols[state.dot];\n                var symbolDisplay = this.getSymbolDisplay(nextSymbol);\n                lines.push('A ' + symbolDisplay + ' based on:');\n                this.displayStateStack(stateStack, lines);\n            }, this);\n        }\n        lines.push(\"\");\n        return lines.join(\"\\n\");\n    }\n    \n    Parser.prototype.displayStateStack = function(stateStack, lines) {\n        var lastDisplay;\n        var sameDisplayCount = 0;\n        for (var j = 0; j < stateStack.length; j++) {\n            var state = stateStack[j];\n            var display = state.rule.toString(state.dot);\n            if (display === lastDisplay) {\n                sameDisplayCount++;\n            } else {\n                if (sameDisplayCount > 0) {\n                    lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');\n                }\n                sameDisplayCount = 0;\n                lines.push('    ' + display);\n            }\n            lastDisplay = display;\n        }\n    };\n\n    Parser.prototype.getSymbolDisplay = function(symbol) {\n        return getSymbolLongDisplay(symbol);\n    };\n\n    /*\n    Builds a the first state stack. You can think of a state stack as the call stack\n    of the recursive-descent parser which the Nearley parse algorithm simulates.\n    A state stack is represented as an array of state objects. Within a\n    state stack, the first item of the array will be the starting\n    state, with each successive item in the array going further back into history.\n\n    This function needs to be given a starting state and an empty array representing\n    the visited states, and it returns an single state stack.\n\n    */\n    Parser.prototype.buildFirstStateStack = function(state, visited) {\n        if (visited.indexOf(state) !== -1) {\n            // Found cycle, return null\n            // to eliminate this path from the results, because\n            // we don't know how to display it meaningfully\n            return null;\n        }\n        if (state.wantedBy.length === 0) {\n            return [state];\n        }\n        var prevState = state.wantedBy[0];\n        var childVisited = [state].concat(visited);\n        var childResult = this.buildFirstStateStack(prevState, childVisited);\n        if (childResult === null) {\n            return null;\n        }\n        return [state].concat(childResult);\n    };\n\n    Parser.prototype.save = function() {\n        var column = this.table[this.current];\n        column.lexerState = this.lexerState;\n        return column;\n    };\n\n    Parser.prototype.restore = function(column) {\n        var index = column.index;\n        this.current = index;\n        this.table[index] = column;\n        this.table.splice(index + 1);\n        this.lexerState = column.lexerState;\n\n        // Incrementally keep track of results\n        this.results = this.finish();\n    };\n\n    // nb. deprecated: use save/restore instead!\n    Parser.prototype.rewind = function(index) {\n        if (!this.options.keepHistory) {\n            throw new Error('set option `keepHistory` to enable rewinding')\n        }\n        // nb. recall column (table) indicies fall between token indicies.\n        //        col 0   --   token 0   --   col 1\n        this.restore(this.table[index]);\n    };\n\n    Parser.prototype.finish = function() {\n        // Return the possible parsings\n        var considerations = [];\n        var start = this.grammar.start;\n        var column = this.table[this.table.length - 1]\n        column.states.forEach(function (t) {\n            if (t.rule.name === start\n                    && t.dot === t.rule.symbols.length\n                    && t.reference === 0\n                    && t.data !== Parser.fail) {\n                considerations.push(t);\n            }\n        });\n        return considerations.map(function(c) {return c.data; });\n    };\n\n    function getSymbolLongDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return 'character matching ' + symbol;\n            } else if (symbol.type) {\n                return symbol.type + ' token';\n            } else if (symbol.test) {\n                return 'token matching ' + String(symbol.test);\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    function getSymbolShortDisplay(symbol) {\n        var type = typeof symbol;\n        if (type === \"string\") {\n            return symbol;\n        } else if (type === \"object\") {\n            if (symbol.literal) {\n                return JSON.stringify(symbol.literal);\n            } else if (symbol instanceof RegExp) {\n                return symbol.toString();\n            } else if (symbol.type) {\n                return '%' + symbol.type;\n            } else if (symbol.test) {\n                return '<' + String(symbol.test) + '>';\n            } else {\n                throw new Error('Unknown symbol type: ' + symbol);\n            }\n        }\n    }\n\n    return {\n        Parser: Parser,\n        Grammar: Grammar,\n        Rule: Rule,\n    };\n\n}));\n","(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n    var reverseMap = Object.create(null)\n    var byLength = Object.create(null)\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword)\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        reverseMap[keyword] = tokenType\n      })\n    }\n\n    // fast string lookup\n    // https://jsperf.com/string-lookups\n    function str(x) { return JSON.stringify(x) }\n    var source = ''\n    source += 'switch (value.length) {\\n'\n    for (var length in byLength) {\n      var keywords = byLength[length]\n      source += 'case ' + length + ':\\n'\n      source += 'switch (value) {\\n'\n      keywords.forEach(function(keyword) {\n        var tokenType = reverseMap[keyword]\n        source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\\n'\n      })\n      source += '}\\n'\n    }\n    source += '}\\n'\n    return Function('value', source) // type\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      throw new Error(this.formatError(token, \"invalid syntax\"))\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    var start = Math.max(0, token.offset - token.col + 1)\n    var eol = token.lineBreaks ? token.text.indexOf('\\n') : token.text.length\n    var firstLine = this.buffer.substring(start, token.offset + eol)\n    message += \" at line \" + token.line + \" col \" + token.col + \":\\n\\n\"\n    message += \"  \" + firstLine + \"\\n\"\n    message += \"  \" + Array(token.col).join(\" \") + \"^\"\n    return message\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","export const boolean = /true|false|TRUE|FALSE\\b(?!@)/;\nexport const hexadecimal = /-?0x(?:[0-9a-fA-F]+)\\b(?!@)/;\nexport const octal = /-?0(?:[0-7]+)\\b(?!@)/;\nexport const measurement = /-?(?:[0-9]|[1-9][0-9]+)(?:\\.[0-9]+)?[a-zA-Z]+\\b(?!@)/;\nexport const decimal = /-?(?:[0-9]|[1-9][0-9]+)\\.[0-9]+(?:[eE][-+]?[0-9]+)?\\b(?!@)/;\nexport const integer = /-?(?:[0-9]|[1-9][0-9]+)(?:[eE][-+]?[0-9]+)?\\b(?!@)/;\nexport const taggedString = /[a-zA-Z][0-9a-zA-Z_@]*`(?:\\\\[`bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^`\\\\])*`/;\nexport const doubleQuotedString = /\"(?:\\\\[\"bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^\"\\\\])*\"/;\nexport const singleQuotedString = /'(?:\\\\['bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^'\\\\])*'/;\nexport const tickedString = /`(?:\\\\[`bfnrt/\\\\]|\\\\u[a-fA-F0-9]{4}|[^`\\\\])*`/;\nexport const symbol = /[a-zA-Z_][0-9a-zA-Z_]*\\b(?!@)/;\nexport const identifier = /[0-9a-zA-Z_@]+\\b@*/;\n\nconst checkIdentifierRegex = new RegExp('^' + identifier.source + '$');\n\n/**\n * Checks whether the given string is a valid identifier.\n *\n */\nexport const isValidIdentifier = (s?: string) =>\n  s && checkIdentifierRegex.test(s);\n","/**\n * # Gram AST Types\n *\n * References:\n *\n * - [unist](https://github.com/syntax-tree/unist) - Universal Synax Tree\n * - [AST](https://en.wikipedia.org/wiki/Abstract_syntax_tree)\n * @packageDocumentation\n */\n\nimport {\n  Parent as UnistParent,\n  Literal as UnistLiteral,\n  Node as UnistNode,\n} from 'unist';\nimport * as tokens from './gram-tokens';\n\nexport { tokens };\n\n/**\n * A GramSeq is a sequence of paths.\n *\n */\nexport interface GramSeq extends UnistParent {\n  /**\n   * Type discriminator for this AST element, aways 'seq'.\n   */\n  type: 'seq';\n\n  children: GramPath[];\n}\n\n/**\n * Type guard for GramSeq.\n *\n * @param o any object\n */\nexport const isGramSeq = (o: any): o is GramSeq => !!o.type && o.type === 'seq';\n\n///////////////////////////////////////////////////////////////////////////////\n// Path-like types...\n\n/**\n * GramPath is either empty, or the composition of two paths.\n */\nexport interface GramPath extends UnistParent {\n  /**\n   * Type discriminator for this AST element, always 'path'.\n   */\n  type: 'path';\n\n  /**\n   * An identifier for the path.\n   *\n   * For example, '1' in `()-[1]->()` or 'a' in `(a)`\n   */\n  id?: string;\n\n  /**\n   * The kind of path composition.\n   */\n  kind?: PathKind;\n\n  /**\n   * Labels are used to qualify a path.\n   *\n   * For example, 'Aye' in `(:Aye)` or 'KNOWS' in `(a)-[:KNOWS]->(b)`\n   */\n  labels?: string[];\n\n  /**\n   * The data content of the path.\n   */\n  record?: GramRecord;\n\n  /**\n   * The children are the path members which the path composed.\n   *\n   * The 'children' field is compatible with generic AST.\n   *\n   * Either:\n   * - no children\n   * - a single child with an implied RHS empty path\n   * - two children which are composed into a path\n   */\n  children: [] | [GramPath] | [GramPath, GramPath];\n}\n\n/**\n * Type guard for a Path.\n *\n * @param o any object\n */\nexport const isGramPath = (o: any): o is GramPath =>\n  !!o.type && o.type === 'path';\n\n/**\n * Constant identity for empty paths: `ø`.\n */\nexport const EMPTY_PATH_ID = 'ø';\n\n/**\n * A GramEmptyPath is an empty path with no children,\n * no labels, and no record\n * but a unique singleton identity of {@link EMPTY_PATH_ID}.\n */\nexport interface GramEmptyPath extends GramPath {\n  id: typeof EMPTY_PATH_ID;\n\n  labels: undefined;\n\n  record: undefined;\n\n  children: [];\n}\n\n/**\n * Type guard for GramEmptyPath.\n *\n * @param o any object\n */\nexport const isGramEmptyPath = (o: any): o is GramEmptyPath =>\n  isGramPath(o) && o.id === EMPTY_PATH_ID;\n\n/**\n * A GramNode is a special case of a path composed of two\n * empty paths, which is equivalent to having no children.\n */\nexport interface GramNode extends GramPath {\n  /**\n   * Optimized to no children, though understood\n   * to have two empty paths as children.\n   */\n  children: [];\n}\n\n/**\n * Type guard for GramNode.\n *\n * @param o any object\n */\nexport const isGramNode = (o: any): o is GramNode =>\n  isGramPath(o) &&\n  o.children &&\n  o.children.length === 0 &&\n  o.id !== EMPTY_PATH_ID;\n\n/**\n * A GramEdge is a special case of a path composed of\n * two GramNodes.\n *\n */\nexport interface GramEdge extends GramPath {\n  /**\n   * The adjacent Nodes of the Edge, known as \"children\" in the AST.\n   *\n   * children[0] is the 'left' Node\n   * children[1] is the 'right' Node\n   */\n  children: [GramNode, GramNode];\n}\n\n/**\n * Type guard for GramEdge.\n *\n * @param o any object\n */\nexport const isGramEdge = (o: any): o is GramEdge =>\n  isGramPath(o) &&\n  o.kind !== undefined &&\n  o.kind !== 'pair' &&\n  o.children !== undefined &&\n  o.children.every(child => isGramNode(child));\n\n/**\n * Kind of path which forms a graph relationship.\n *\n * One of:\n *\n * - left   `(a)<--(b)`\n * - right  `(a)-->(b)`\n * - either `(a)--(b)`\n *\n */\nexport type RelationshipKind = 'left' | 'right' | 'either';\n\n/**\n * Kind of path which combines two paths together\n * without implying any semantics.\n *\n * One of:\n *\n * - pair  `(a),(b)`\n *\n */\nexport type CombinationKind = 'pair';\n\n/**\n * PathKind describes the nature of the\n * path composition.\n *\n * One of:\n *\n * - RelationshipKind: 'left', 'right', 'either'\n * - CombinationKind:  `pair`\n */\nexport type PathKind = RelationshipKind | CombinationKind;\n\n/**\n * GramPathlike is a discriminated union of GramPath with\n * its two primary specializations, GramNode and GramEdge.\n */\nexport type GramPathlike = GramPath | GramNode | GramEdge;\n\n///////////////////////////////////////////////////////////////////////////////\n// Records...\n\n/**\n * GramRecordValue is a union of literals, literal arrays and nested records.\n * This forms a familiar OO-style structure.\n */\nexport type GramRecordValue = GramLiteral | GramRecord | GramRecordValue[];\n\n/**\n * A GramRecord is a map of name/value pairs.\n *\n */\nexport type GramRecord = Map<string, GramRecordValue>; // { [key: string]: GramRecordValue };\n\n/**\n * A type guard to narrow a GramRecordValue to a GramRecord.\n *\n * Warning: this is not a runtime guarantee\n *\n * @param v any GramRecordValue\n */\nexport const isGramRecord = (v: any): v is GramRecord =>\n  typeof v == 'object' && v instanceof Map;\n\nexport const isGramLiteralArray = (v: GramRecordValue): v is GramLiteral[] =>\n  Array.isArray(v) && isGramLiteral(v[0]);\n\n/**\n * A GramProperty is a name/value pair.\n */\nexport interface GramProperty extends UnistNode {\n  /**\n   * Type discriminator for this AST element, always 'property'.\n   */\n  type: 'property';\n\n  /**\n   * The property name.\n   */\n  name: string;\n\n  /**\n   * The property value. Either a single literal, an array of literals, or a GramRecord.\n   */\n  value: GramRecordValue;\n}\n\n/**\n * Type guard for GramProperty.\n *\n * @param o any object\n */\nexport const isGramProperty = (o: any): o is GramProperty =>\n  !!o.type && o.type === 'property';\n\n/**\n * Base interface for literals, all of which\n * only provide textual value representations.\n *\n */\ninterface TextLiteral extends UnistLiteral {\n  value: string;\n}\n\n/**\n * Discrimination union of all possible literals.\n */\nexport type GramLiteral =\n  | BooleanLiteral\n  | StringLiteral\n  | TaggedTextLiteral\n  | IntegerLiteral\n  | MeasurementLiteral\n  | DecimalLiteral\n  | HexadecimalLiteral\n  | OctalLiteral;\n\n/**\n * Type guard for GramLiteral.\n *\n * @param o any object\n */\nexport const isGramLiteral = (o: any): o is GramLiteral =>\n  !!o.type && !!o.value && o.type !== 'property';\n\n/**\n * Represents a boolean literal, like `true` or `false`.\n */\nexport interface BooleanLiteral extends TextLiteral {\n  /**\n   * Represents this variant of a Literal.\n   */\n  type: 'boolean';\n\n  value: 'true' | 'false';\n}\n\n/**\n * Type guard for BooleanLiteral.\n *\n * @param o any object\n */\nexport const isBooleanLiteral = (o: any): o is TextLiteral =>\n  !!o.type && !!o.value && o.type === 'boolean';\n\n/**\n * Represents a string literal, like \"hello\".\n */\nexport interface StringLiteral extends TextLiteral {\n  /**\n   * Represents this variant of a Literal.\n   */\n  type: 'string';\n}\n\n/**\n * Type guard for StringLiteral.\n *\n * @param o any object\n */\nexport const isStringLiteral = (o: any): o is TextLiteral =>\n  !!o.type && !!o.value && o.type === 'string';\n\n/**\n * Represents an integer number, like 235276234.\n * Note: there is no explicit min or max value.\n */\nexport interface IntegerLiteral extends TextLiteral {\n  type: 'integer';\n}\n\n/**\n * Type guard for IntegerLiteral.\n *\n * @param o any object\n */\nexport const isIntegerLiteral = (o: any): o is IntegerLiteral =>\n  !!o.type && !!o.value && o.type === 'integer';\n\n/**\n * Represents an decimal number, like 3.1495.\n * Note: there is no explicit min or max value.\n */\nexport interface DecimalLiteral extends TextLiteral {\n  type: 'decimal';\n}\n\n/**\n * Type guard for DecimalLiteral.\n *\n * @param o any object\n */\nexport const isDecimalLiteral = (o: any): o is DecimalLiteral =>\n  !!o.type && !!o.value && o.type === 'decimal';\n\n/**\n * Represents an integer expressed in hexadecimal, like 0xc0d3.\n *\n * The prefix `0x` signifies a hexadecimal value to follow.\n */\nexport interface HexadecimalLiteral extends TextLiteral {\n  type: 'hexadecimal';\n}\n\n/**\n * Type guard for HexadecimalLiteral.\n *\n * @param o any object\n */\nexport const isHexadecimalLiteral = (o: any): o is HexadecimalLiteral =>\n  !!o.type && !!o.value && o.type === 'hexadecimal';\n\n/**\n * Represents an integer expressed in octal, like 01372.\n *\n * The prefix `0` signifies octal notation value to follow.\n * Without the leading 0, the number would represent an integer.\n */\nexport interface OctalLiteral extends TextLiteral {\n  type: 'octal';\n}\n\n/**\n * Type guard for OctalLiteral.\n *\n * @param o any object\n */\nexport const isOctalLiteral = (o: any): o is OctalLiteral =>\n  !!o.type && !!o.value && o.type === 'octal';\n\n/**\n * Represents a decimal with units, like 12.4px or 42.0mm\n */\nexport interface MeasurementLiteral extends TextLiteral {\n  type: 'measurement';\n\n  /**\n   * The unit suffix of the decimal value.\n   */\n  unit: string;\n}\n\n/**\n * Type guard for MeasurementLiteral.\n *\n * @param o any object\n */\nexport const isMeasurementLiteral = (o: any): o is MeasurementLiteral =>\n  !!o.type && !!o.value && !!o.unit && o.type === 'measurement';\n\n///////////////////////////////////////\n// Tagged text literals\n\nexport type TaggedLiteral =\n  | DateLiteral\n  | TimeLiteral\n  | DateTimeLiteral\n  | TimeIntervalLiteral\n  | DurationLiteral\n  | WellKnownTextLiteral\n  | UriLiteral;\n/**\n * Represents a string value with a format indicated by a \"tag\".\n *\n * Some well-known tags:\n * - `md\\`# Hello World\\``\n * - `html\\`<h1>Hello World</h1>\\``\n * - `date\\`2020-07-14```\n * - `time\\`17:35:42\\``\n * - `uri\\`https://gram-data.github.io\\`\n * - `wkt\\`POINT(-83.123 42.123)\\``\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals | Wikipedia Template literals}\n */\nexport interface TaggedTextLiteral extends TextLiteral {\n  type: 'tagged';\n\n  /**\n   * The tag prefix of the string value.\n   */\n  tag: string;\n}\n\n/**\n * Type guard for TaggedTextLiteral.\n *\n * @param o any object\n */\nexport const isTaggedLiteral = (o: any): o is TaggedLiteral =>\n  !!o.type && !!o.value && !!o.tag && o.type === 'tagged';\n\n/**\n * Represents an ISO8601 calendar date, like `2020-02-02`.\n *\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Calendar_dates | Wikipedia ISO8601 Caelndar dates}\n */\nexport interface DateLiteral extends TaggedTextLiteral {\n  tag: 'date';\n}\n\n/**\n * Type guard for DateLiteral.\n *\n * Note: this does not validate the text representation.\n *\n * @param o any object\n */\nexport const isDateLiteral = (o: any): o is DateLiteral =>\n  !!o.type && !!o.value && !!o.tag && o.type === 'tagged' && o.tag === 'date';\n\n/**\n * Represents an ISO8601 time, like `13:47:30`.\n *\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Times | Wikipedia ISO8601 Times}\n */\nexport interface TimeLiteral extends TaggedTextLiteral {\n  tag: 'time';\n}\n\n/**\n * Type guard for TimeLiteral.\n *\n * Note: this does not validate the text representation.\n *\n * @param o any object\n */\nexport const isTimeLiteral = (o: any): o is TaggedTextLiteral =>\n  !!o.type && !!o.value && !!o.tag && o.type === 'tagged' && o.tag === 'time';\n\n/**\n * Represents an ISO8601 date-time, like `2007-04-05T14:30Z` which is\n * a date followed by a time, separated by a 'T'.\n *\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations | Wikipedia ISO8601 Date and time}\n */\nexport interface DateTimeLiteral extends TaggedTextLiteral {\n  tag: 'datetime';\n}\n\n/**\n * Type guard for DateTimeLiteral.\n *\n * Note: this does not validate the text representation.\n *\n * @param o any object\n */\nexport const isDateTimeLiteral = (o: any): o is DateTimeLiteral =>\n  !!o.type &&\n  !!o.value &&\n  !!o.tag &&\n  o.type === 'tagged' &&\n  o.tag === 'datetime';\n\n/**\n * Represents an ISO8601 duration, like `P23DT23H`.\n *\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Durations | Wikipedia ISO8601 Durations}\n */\nexport interface DurationLiteral extends TaggedTextLiteral {\n  tag: 'duration';\n}\n\n/**\n * Type guard for DurationLiteral.\n *\n * Note: this does not validate the text representation.\n *\n * @param o any object\n */\nexport const isDuration = (o: any): o is DurationLiteral =>\n  !!o.type &&\n  !!o.value &&\n  !!o.tag &&\n  o.type === 'tagged' &&\n  o.tag === 'duration';\n\n/**\n * Represents an ISO8601 time interval, like `2007-03-01T13:00:00Z/2008-05-11T15:30:00Z`.\n *\n * This can also represent a repeating interval.\n *\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Time_intervals | Wikipedia ISO8601 Time_intervals}\n * @see {@link https://en.wikipedia.org/wiki/ISO_8601#Repeating_intervals | Wikipedia ISO8601 Repeating_intervals}\n */\nexport interface TimeIntervalLiteral extends TaggedTextLiteral {\n  tag: 'interval';\n}\n\n/**\n * Type guard for TimeIntervalLiteral.\n *\n * Note: this does not validate the text representation.\n *\n * @param o any object\n */\nexport const isTimeInterval = (o: any): o is TimeIntervalLiteral =>\n  !!o.type &&\n  !!o.value &&\n  !!o.tag &&\n  o.type === 'tagged' &&\n  o.tag === 'interval';\n\n/**\n * Represents a WKT 2 geospatial value, like `POINT(-83.123 42.123)`\n *\n * @see {@link http://docs.opengeospatial.org/is/18-010r7/18-010r7.html | Opengeospatial WKT}\n * @see {@link https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry | Wikipedia Well-known text geometry}\n */\nexport interface WellKnownTextLiteral extends TaggedTextLiteral {\n  tag: 'wkt';\n}\n\n/**\n * Type guard for WellKnownTextLiteral.\n *\n * @param o any object\n */\nexport const isWellKnownTextLiteral = (o: any): o is WellKnownTextLiteral =>\n  !!o.type && !!o.value && !!o.tag && o.type === 'tagged' && o.tag === 'wkt';\n\n/**\n * Represents a well-formed URI.\n *\n * ## Some examples:\n *\n * ### `geo`\n *\n * > A 'geo' URI identifies a physical location in a two- or three-dimensional\n * > coordinate reference system in a compact, simple, human-readable, and\n * > protocol-independent way.\n *\n * ```\n * uri`geo:39.282495,-76.594709`\n * ```\n *\n * @see {@link https://tools.ietf.org/html/rfc5870 | IETF RFC5870 }\n *\n * ### `plus`\n *\n * > A 'plus' URI identifies a physical location encoded as\n * > Open Location Code, a \"plus code\".\n *\n * ```\n * uri`plus:7CJ4+W4 Baltimore, MD`\n * ```\n *\n * @see {@link https://github.com/google/open-location-code | Open Location Code }\n *\n * ### `h3`\n *\n * > An 'h3' URI identifies a physical location encoded using\n * > the H3 geospatial indexing system, a multi-precision hexagonal\n * > tiling of the sphere indexed with hierarchical linear indexes.\n *\n * ```\n * uri`h3:8c2aa8c76b11bff`\n * ```\n *\n * @see {@link https://h3geo.org | H3 }\n *\n * ### `http(s)`\n *\n * > Hopefully This Thing Presents Sensibly, a popular scheme used\n * >on the interwebs.\n *\n */\nexport interface UriLiteral extends TaggedTextLiteral {\n  tag: 'uri';\n}\n\n/**\n * Type guard for UriLiteral.\n *\n * @param o any object\n */\nexport const isUriLiteral = (o: any): o is UriLiteral =>\n  !!o.type && !!o.value && !!o.tag && o.type === 'tagged' && o.tag === 'uri';\n","/**\n * gram-builder package.\n *\n * @packageDocumentation\n */\n\nimport { Node as UnistNode } from 'unist';\nimport {\n  GramSeq,\n  GramPath,\n  GramNode,\n  GramEdge,\n  GramProperty,\n  GramRecordValue,\n  BooleanLiteral,\n  StringLiteral,\n  IntegerLiteral,\n  DecimalLiteral,\n  HexadecimalLiteral,\n  OctalLiteral,\n  MeasurementLiteral,\n  GramRecord,\n  GramEmptyPath,\n  isGramNode,\n  isGramEmptyPath,\n  EMPTY_PATH_ID,\n  DateLiteral,\n  TimeLiteral,\n  DurationLiteral,\n  PathKind,\n  RelationshipKind,\n  TaggedTextLiteral,\n  isGramLiteral,\n  isGramRecord,\n} from '@gram-data/gram-ast';\n\nexport type Children<T> = T | T[] | (() => T | T[]);\n\nfunction normalizeChildren<T extends UnistNode>(children?: Children<T>): T[] {\n  if (Array.isArray(children)) {\n    return children;\n  } else if (children instanceof Function) {\n    const res = children();\n    return normalizeChildren<T>(res);\n  } else if (typeof children === 'undefined') {\n    return [];\n  } else {\n    return [children];\n  }\n}\n\nconst dateToYMD = (d: Date) => d.toISOString().slice(0, 10);\n\nconst dateToDayOfMonth = (d: Date) => '--' + d.toISOString().slice(5, 10);\n\n/**\n * Build a path sequence that represents a graph.\n *\n * @param paths sequence of paths through history\n * @param id optional reference identifier. The \"name\" of this graph instance.\n * @param labels optional labels\n * @param record optional graph-level data\n */\nexport const seq = (\n  paths: Children<GramPath>,\n  id?: string,\n  labels?: string[],\n  record?: GramRecord\n): GramSeq => ({\n  type: 'seq',\n  id,\n  ...(labels && { labels }),\n  ...(record && { record }),\n  children: normalizeChildren<GramPath>(paths),\n});\n\nexport interface PathAttributes {\n  id?: string;\n  labels?: string[];\n  record?: GramRecord;\n  kind?: PathKind;\n}\n\n/**\n * Reduce a list of paths into a single path composed using the given kind.\n *\n * @param kind the kind to apply to all sub-paths\n * @param pathlist sub-paths to be paired\n * @param baseID the baseID from which path expressions will derive new IDs\n */\nexport const listToPath = (\n  kind: PathKind = 'pair',\n  pathlist: GramPath[]\n): GramPath => {\n  if (pathlist.length > 1) {\n    return pathlist\n      .slice(0, pathlist.length - 1)\n      .reduceRight((acc: GramPath, curr) => {\n        return cons([curr, acc], { kind });\n      }, pathlist[pathlist.length - 1]);\n  } else {\n    return pathlist[0];\n  }\n};\n\n/**\n * Build a path.\n *\n * @param members sub-paths to compose\n * @param attributes attributes\n */\nexport const cons = (\n  members?: [] | [GramPath] | [GramPath, GramPath],\n  attributes: PathAttributes = {}\n): GramPath => {\n  const element: any = {\n    type: 'path',\n    ...(attributes.id && { id: attributes.id }),\n    ...(attributes.labels && { labels: attributes.labels }),\n    ...(attributes.record && { record: attributes.record }),\n    // children: members ? members.filter(child => child && !isGramEmptyPath(child)) : undefined,\n  };\n  if (members === undefined) {\n    if (element.id && element.id !== EMPTY_PATH_ID) {\n      element.children = [];\n      return element;\n    }\n    element.children = undefined;\n    return EMPTY_PATH;\n  } else if (members.length === 0) {\n    if (element.id === EMPTY_PATH_ID) {\n      return EMPTY_PATH;\n    }\n    element.children = [];\n    return element as GramNode;\n  } else if (members.length === 1) {\n    const lhs = members[0];\n\n    if (isGramEmptyPath(lhs)) {\n      element.children = [];\n      return element as GramNode;\n    } else {\n      element.children = [lhs];\n      return element as GramPath;\n    }\n  } else if (members.length === 2) {\n    if (\n      attributes.kind &&\n      attributes.kind !== 'pair' &&\n      isGramNode(members[0]) &&\n      isGramNode(members[1])\n    ) {\n      element.kind = attributes.kind;\n      element.children = [members[0], members[1]];\n      return element as GramEdge;\n    } else if (isGramEmptyPath(members[0]) && isGramEmptyPath(members[1])) {\n      element.kind = attributes.kind;\n      element.children = [];\n      return element as GramNode;\n    }\n    element.children = [members[0], members[1]];\n  }\n  element.kind = attributes.kind || 'pair';\n  return element as GramPath;\n};\n\n/**\n * Singleton instance of GramEmptyPath\n */\nconst EMPTY_PATH: GramEmptyPath = {\n  type: 'path',\n  id: EMPTY_PATH_ID,\n  labels: undefined,\n  record: undefined,\n  children: [],\n};\n\n/**\n * Convenience function for retrieving the singleton GramEmptyPath.\n */\nexport const empty = (): GramEmptyPath => EMPTY_PATH;\n\n/**\n * Build a GramNode.\n *\n * @param id identifier\n * @param labels\n * @param record\n * @param annotation\n */\nexport const node = (\n  id?: string,\n  labels?: string[],\n  record?: GramRecord\n): GramNode => ({\n  type: 'path',\n  ...(id && { id }),\n  ...(labels && { labels }),\n  ...(record && { record }),\n  children: [],\n});\n\n/**\n * Build an Edge.\n *\n * @param children\n * @param kind\n * @param id\n * @param labels\n * @param record\n */\nexport const edge = (\n  children: [GramNode, GramNode],\n  kind: RelationshipKind,\n  id?: string,\n  labels?: string[],\n  record?: GramRecord\n): GramEdge => ({\n  type: 'path',\n  id,\n  ...(labels && { labels }),\n  ...(record && { record }),\n  kind,\n  children,\n});\n\n/**\n * Build a pair\n *\n * @param children\n * @param id\n * @param labels\n * @param record\n */\nexport const path = (\n  kind: PathKind,\n  members: [GramPath, GramPath],\n  id?: string,\n  labels?: string[],\n  record?: GramRecord\n): GramPath => ({\n  type: 'path',\n  kind,\n  id,\n  ...(labels && { labels }),\n  ...(record && { record }),\n  children: members,\n});\n\n/**\n * Build a pair\n *\n * @param children\n * @param id\n * @param labels\n * @param record\n */\nexport const pair = (\n  members: [GramPath, GramPath],\n  id?: string,\n  labels?: string[],\n  record?: GramRecord\n): GramPath => path('pair', members, id, labels, record);\n\n/**\n * Create a new, empty GramRecord.\n *\n */\nexport const emptyRecord = () => new Map<string, GramRecordValue>();\n\n/**\n * Reduces an array of GramProperties into a GramRecord.\n *\n * @param properties\n */\nexport const propertiesToRecord = (properties: GramProperty[]): GramRecord => {\n  return properties.reduce((acc: GramRecord, p: GramProperty) => {\n    acc.set(p.name, p.value);\n    return acc;\n  }, emptyRecord());\n};\n\n/**\n * Transforms a plain js object into a GramRecord.\n *\n * @param o\n */\nexport const objectToRecord = (o: any): GramRecord => {\n  return Object.entries(o).reduce((acc: GramRecord, [k, v]) => {\n    acc.set(k, propertyValue(v));\n    return acc;\n  }, emptyRecord());\n};\n\n/**\n * Extracts the value from a GramLiteral, if available.\n *\n * @param l\n */\nexport const getValue = (l: GramRecordValue | undefined) =>\n  isGramLiteral(l) ? l.value : undefined;\n\n/**\n * Produces a Lens into a literal value with a GramRecord.\n *\n * @param path\n */\nexport const getLiteral = (name: string) => {\n  return (v: GramRecord) => {\n    const l = v.get(name);\n    return getValue(l);\n  };\n};\n\n/**\n * Produces a Lens into a record value with a GramRecord.\n *\n * @param path\n */\nexport const getRecord = (name: string) => {\n  return (r: GramRecord) => {\n    const v = r.get(name);\n    return isGramRecord(v) ? v : undefined;\n  };\n};\n\n/**\n * Produces a Lens down into nested GramRecords.\n *\n * ### Examples:\n *\n * Descend using either an array of names, or dot notation.\n *\n * ```\n * const o = g.objectToRecord({a:{b:{c:g.string(\"value\")}}})\n *\n * const getAbc1 = g.getDown(['a','b','c']);\n * const getAbc2 = g.getDown(\"a.b.c\");\n *\n * expect(getAbc1(o)).toStrictEqual(getAbc2(o));\n * ```\n *\n * Descend, then apply a function to extract the text value.\n *\n * ```\n * const o = objectToRecord({a:{b:{c:string(\"value\")}}})\n * const getAbc = getDown(\"a.b.c\", getValue);\n *\n * expect(getAbc(o)).toBe(\"value\");\n * ```\n *\n * @param hierarchy array or dot-notation path to descend\n */\nexport const getDown = (\n  hierarchy: string[] | string,\n  f?: (r: GramRecordValue) => any\n) => {\n  const pathDown = Array.isArray(hierarchy) ? hierarchy : hierarchy.split('.');\n  return (r: GramRecord) => {\n    const bottom = pathDown.reduce(\n      (acc, name) => (isGramRecord(acc) ? acc.get(name) : undefined),\n      r as GramRecordValue | undefined\n    );\n    return bottom && (f ? f(bottom) : bottom);\n  };\n};\n\n/**\n * Builds a GramProperty from a name\n * @param name\n * @param value\n */\nexport const property = (name: string, value: any): GramProperty => {\n  const Node: GramProperty = {\n    type: 'property',\n    name,\n    value: isGramLiteral(value) ? value : propertyValue(value),\n  };\n  return Node;\n};\n\nexport const propertyValue = (value: any): GramRecordValue => {\n  if (Array.isArray(value)) {\n    return value.map(v => propertyValue(v));\n  } else if (typeof value === 'object') {\n    if (value instanceof Date) {\n      return date(value);\n    } else if (isGramLiteral(value)) {\n      return value;\n    }\n    return objectToRecord(value);\n  } else {\n    switch (typeof value) {\n      case 'string':\n        return string(value);\n      case 'bigint':\n        return decimal(value.toString());\n      case 'boolean':\n        return boolean(value);\n      case 'number':\n        return decimal(value.toString());\n      case 'symbol':\n        return string(value.toString());\n      default:\n        throw new Error(`Unsupported value: ${value}`);\n    }\n  }\n};\n\nexport const boolean = (value: boolean): BooleanLiteral => ({\n  type: 'boolean',\n  value: value ? 'true' : 'false',\n});\n\nexport const string = (value: string): StringLiteral => ({\n  type: 'string',\n  value,\n});\n\nexport const tagged = (tag: string, value: string): TaggedTextLiteral => ({\n  type: 'tagged',\n  value,\n  tag,\n});\n\nexport const integer = (value: string | number): IntegerLiteral => ({\n  type: 'integer',\n  value: String(value),\n});\n\nexport const decimal = (value: string | number): DecimalLiteral => ({\n  type: 'decimal',\n  value: String(value),\n});\n\nexport const hexadecimal = (value: string | number): HexadecimalLiteral => ({\n  type: 'hexadecimal',\n  value: typeof value === 'number' ? value.toString(16) : value,\n});\n\nexport const octal = (value: string | number): OctalLiteral => ({\n  type: 'octal',\n  value: typeof value === 'number' ? value.toString(8) : value,\n});\n\nexport const measurement = (\n  unit: string,\n  value: string | number\n): MeasurementLiteral => ({\n  type: 'measurement',\n  value: String(value),\n  unit,\n});\n\nexport const year = (value: string | Date): DateLiteral =>\n  tagged(\n    'date',\n    value instanceof Date ? value.getFullYear().toString() : value\n  ) as DateLiteral;\n\nexport const date = (value: string | Date): DateLiteral =>\n  tagged(\n    'date',\n    value instanceof Date ? dateToYMD(value) : value\n  ) as DateLiteral;\n\nexport const dayOfMonth = (value: string | Date): DateLiteral =>\n  tagged(\n    'date',\n    value instanceof Date ? dateToDayOfMonth(value) : value\n  ) as DateLiteral;\n\nexport const time = (value: string | Date): TimeLiteral =>\n  tagged(\n    'time',\n    value instanceof Date ? value.toTimeString() : value\n  ) as TimeLiteral;\n\nexport const duration = (value: string | Date): DurationLiteral =>\n  tagged(\n    'duration',\n    value instanceof Date\n      ? `P${value.getUTCFullYear() -\n          1970}Y${value.getUTCMonth()}M${value.getUTCDate()}DT${value.getUTCHours()}H${value.getUTCMinutes()}M${value.getUTCMilliseconds() /\n          1000}S`\n      : value\n  ) as DurationLiteral;\n\nexport const flatten = (xs: any[], depth = 1) =>\n  xs.flat(depth).filter(x => x !== null);\n\nexport default {\n  seq,\n  empty,\n  cons,\n  pair,\n  listToPath,\n  node,\n  edge,\n  property,\n  boolean,\n  string,\n  tagged,\n  integer,\n  decimal,\n  hexadecimal,\n  octal,\n  measurement,\n  date,\n  time,\n  duration,\n  flatten,\n  objectToRecord,\n  propertiesToRecord,\n  propertyValue,\n  fromLiteral: getLiteral,\n};\n","// Generated automatically by nearley, version 2.20.1\n// http://github.com/Hardmath123/nearley\n// Bypasses TS6133. Allow declared but unused functions.\n// @ts-ignore\nimport moo from 'moo';\nimport * as g from '@gram-data/gram-builder';\nimport { tokens } from '@gram-data/gram-ast';\n\nfunction id(d: any[]): any {\n  return d[0];\n}\ndeclare var identifier: any;\ndeclare var symbol: any;\ndeclare var integer: any;\ndeclare var octal: any;\ndeclare var hexadecimal: any;\ndeclare var measurement: any;\ndeclare var tickedString: any;\ndeclare var boolean: any;\ndeclare var singleQuotedString: any;\ndeclare var doubleQuotedString: any;\ndeclare var taggedString: any;\ndeclare var decimal: any;\ndeclare var whitespace: any;\ndeclare var lineComment: any;\n\nlet lexer = (moo.compile({\n  whitespace: { match: /\\s+/, lineBreaks: true },\n  lineComment: { match: /\\/\\/.*?\\n?$/ },\n  hexadecimal: tokens.hexadecimal,\n  octal: tokens.octal,\n  measurement: tokens.measurement,\n  decimal: tokens.decimal,\n  integer: tokens.integer,\n  taggedString: { match: tokens.taggedString },\n  boolean: ['true', 'TRUE', 'True', 'false', 'FALSE', 'False'],\n  symbol: tokens.symbol,\n  identifier: tokens.identifier,\n  doubleQuotedString: {\n    match: tokens.doubleQuotedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  singleQuotedString: {\n    match: tokens.singleQuotedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  tickedString: {\n    match: tokens.tickedString,\n    value: (s: string) => s.slice(1, -1),\n  },\n  '-->': '-->',\n  '--': '--',\n  '<--': '<--',\n  '-[]->': '-[]->',\n  '-[]-': '-[]-',\n  '<-[]-': '<-[]-',\n  '<-[': '<-[',\n  ']->': ']->',\n  '-[': '-[',\n  ']-': ']-',\n  '{': '{',\n  '}': '}',\n  '[': '[',\n  ']': ']',\n  '(': '(',\n  ')': ')',\n  ',': ',',\n  ':': ':',\n  '`': '`',\n  \"'\": \"'\",\n  ø: 'ø',\n}) as unknown) as NearleyLexer;\n\nconst empty = () => null;\n\nconst text = ([token]: Array<any>): string => token.text;\n\n/*\n# function extractPairs(pairGroups:Array<any>) {\n#     return pairGroups.map((pairGroup:Array<any>) => {\n#       return pairGroup[3];\n#     })\n# }\n\n# function extractArray(valueGroups:Array<any>):Array<any> {\n#     return valueGroups.map( (valueGroup) => valueGroup[3]);\n# }\n*/\n\nfunction separateTagFromString(taggedStringValue: string) {\n  let valueParts = taggedStringValue.match(/([^`]+)`(.+)`$/);\n  if (valueParts === null || valueParts === undefined)\n    throw Error(`Malformed tagged string: ${taggedStringValue}`);\n  return {\n    tag: valueParts![1],\n    value: valueParts![2],\n  };\n}\n\nfunction separateNumberFromUnits(measurementValue: string) {\n  let valueParts = measurementValue.match(/(-?[0-9.]+)([a-zA-Z]+)/);\n  if (valueParts === null || valueParts === undefined)\n    throw Error(`Malformed measurement : ${measurementValue}`);\n  return {\n    value: valueParts![1],\n    unit: valueParts![2],\n  };\n}\n\ninterface NearleyToken {\n  value: any;\n  [key: string]: any;\n}\n\ninterface NearleyLexer {\n  reset: (chunk: string, info: any) => void;\n  next: () => NearleyToken | undefined;\n  save: () => any;\n  formatError: (token: never) => string;\n  has: (tokenType: string) => boolean;\n}\n\ninterface NearleyRule {\n  name: string;\n  symbols: NearleySymbol[];\n  postprocess?: (d: any[], loc?: number, reject?: {}) => any;\n}\n\ntype NearleySymbol =\n  | string\n  | { literal: any }\n  | { test: (token: any) => boolean };\n\ninterface Grammar {\n  Lexer: NearleyLexer | undefined;\n  ParserRules: NearleyRule[];\n  ParserStart: string;\n}\n\nconst grammar: Grammar = {\n  Lexer: lexer,\n  ParserRules: [\n    {\n      name: 'GramSeq$ebnf$1$subexpression$1',\n      symbols: ['Path'],\n      postprocess: ([pp]) => pp,\n    },\n    { name: 'GramSeq$ebnf$1', symbols: ['GramSeq$ebnf$1$subexpression$1'] },\n    {\n      name: 'GramSeq$ebnf$1$subexpression$2',\n      symbols: ['Path'],\n      postprocess: ([pp]) => pp,\n    },\n    {\n      name: 'GramSeq$ebnf$1',\n      symbols: ['GramSeq$ebnf$1', 'GramSeq$ebnf$1$subexpression$2'],\n      postprocess: d => d[0].concat([d[1]]),\n    },\n    {\n      name: 'GramSeq',\n      symbols: ['_', 'GramSeq$ebnf$1'],\n      postprocess: ([, pp]) => g.seq(g.flatten(pp)),\n    },\n    { name: 'Path', symbols: ['NodePattern'], postprocess: id },\n    { name: 'Path', symbols: ['PathComposition'], postprocess: id },\n    { name: 'Path', symbols: ['PathPair'], postprocess: id },\n    {\n      name: 'NodePattern',\n      symbols: ['Node', '_', 'Edge', '_', 'NodePattern'],\n      postprocess: ([n, , es, , np]) =>\n        g.cons([n, np], {\n          kind: es.kind,\n          id: es.id,\n          labels: es.labels,\n          record: es.record,\n        }),\n    },\n    { name: 'NodePattern', symbols: ['Node'], postprocess: id },\n    { name: 'Node$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'Node$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'Node',\n      symbols: [{ literal: '(' }, '_', 'Node$ebnf$1', { literal: ')' }, '_'],\n      postprocess: ([, , attrs]) =>\n        attrs ? g.node(attrs.id, attrs.labels, attrs.record) : g.node(),\n    },\n    { name: 'Edge$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[' }, '_', 'Edge$ebnf$1', { literal: ']->' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'right', ...attrs }),\n    },\n    { name: 'Edge$ebnf$2', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$2', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[' }, '_', 'Edge$ebnf$2', { literal: ']-' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'either', ...attrs }),\n    },\n    { name: 'Edge$ebnf$3', symbols: ['Attributes'], postprocess: id },\n    { name: 'Edge$ebnf$3', symbols: [], postprocess: () => null },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<-[' }, '_', 'Edge$ebnf$3', { literal: ']-' }, '_'],\n      postprocess: ([, , attrs]) => ({ kind: 'left', ...attrs }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[]->' }, '_'],\n      postprocess: () => ({ kind: 'right' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-[]-' }, '_'],\n      postprocess: () => ({ kind: 'either' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<-[]-' }, '_'],\n      postprocess: () => ({ kind: 'left' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '-->' }, '_'],\n      postprocess: () => ({ kind: 'right' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '--' }, '_'],\n      postprocess: () => ({ kind: 'either' }),\n    },\n    {\n      name: 'Edge',\n      symbols: [{ literal: '<--' }, '_'],\n      postprocess: () => ({ kind: 'left' }),\n    },\n    { name: 'PathComposition', symbols: ['PathPoint'], postprocess: id },\n    { name: 'PathComposition', symbols: ['PathAnnotation'], postprocess: id },\n    { name: 'PathComposition', symbols: ['PathExpression'], postprocess: id },\n    { name: 'PathPoint$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathPoint$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'PathPoint',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathPoint$ebnf$1',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attr]) => {\n        if (\n          attr &&\n          (attr.id || attr.labels || attr.record) &&\n          attr.id !== 'ø'\n        ) {\n          // console.log(attr);\n          return g.node(attr.id, attr.labels, attr.record);\n        } else {\n          return g.empty();\n        }\n      },\n    },\n    { name: 'PathAnnotation$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathAnnotation$ebnf$1', symbols: [], postprocess: () => null },\n    {\n      name: 'PathAnnotation',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathAnnotation$ebnf$1',\n        'Path',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attr, lhs]) => {\n        // console.log('annotate()', lhs)\n        return g.cons(\n          [lhs],\n          attr ? { id: attr.id, labels: attr.labels, record: attr.record } : {}\n        );\n      },\n    },\n    { name: 'PathExpression$ebnf$1', symbols: ['Attributes'], postprocess: id },\n    { name: 'PathExpression$ebnf$1', symbols: [], postprocess: () => null },\n    { name: 'PathExpression$ebnf$2', symbols: ['Kind'], postprocess: id },\n    { name: 'PathExpression$ebnf$2', symbols: [], postprocess: () => null },\n    {\n      name: 'PathExpression',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'PathExpression$ebnf$1',\n        'PathExpression$ebnf$2',\n        'Path',\n        'Path',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , attrs, kind, lhs, rhs]) => {\n        return g.cons([lhs, rhs], {\n          kind,\n          id: attrs.id,\n          labels: attrs.labels,\n          record: attrs.record,\n        });\n      },\n    },\n    { name: 'PathPair$subexpression$1', symbols: ['NodePattern'] },\n    { name: 'PathPair$subexpression$1', symbols: ['PathComposition'] },\n    {\n      name: 'PathPair',\n      symbols: ['PathPair$subexpression$1', { literal: ',' }, '_', 'Path'],\n      postprocess: ([lp, , , rp]) => g.pair([lp[0], rp]),\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: ',' }, '_'],\n      postprocess: () => 'pair',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '-->' }, '_'],\n      postprocess: () => 'right',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '--' }, '_'],\n      postprocess: () => 'either',\n    },\n    {\n      name: 'Kind',\n      symbols: [{ literal: '<--' }, '_'],\n      postprocess: () => 'left',\n    },\n    { name: 'Attributes$ebnf$1', symbols: ['Identity'], postprocess: id },\n    { name: 'Attributes$ebnf$1', symbols: [], postprocess: () => null },\n    { name: 'Attributes$ebnf$2', symbols: ['LabelList'], postprocess: id },\n    { name: 'Attributes$ebnf$2', symbols: [], postprocess: () => null },\n    { name: 'Attributes$ebnf$3', symbols: ['Record'], postprocess: id },\n    { name: 'Attributes$ebnf$3', symbols: [], postprocess: () => null },\n    {\n      name: 'Attributes',\n      symbols: ['Attributes$ebnf$1', 'Attributes$ebnf$2', 'Attributes$ebnf$3'],\n      postprocess: function(d, _, reject) {\n        const [id, labels, record] = d;\n        if (id || labels || record) {\n          return { id, labels, record };\n        } else return reject;\n      },\n    },\n    { name: 'LabelList$ebnf$1', symbols: ['Label'] },\n    {\n      name: 'LabelList$ebnf$1',\n      symbols: ['LabelList$ebnf$1', 'Label'],\n      postprocess: d => d[0].concat([d[1]]),\n    },\n    {\n      name: 'LabelList',\n      symbols: ['LabelList$ebnf$1'],\n      postprocess: ([labels]) => labels,\n    },\n    {\n      name: 'Label',\n      symbols: [{ literal: ':' }, 'Symbol'],\n      postprocess: ([, label]) => label,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('identifier') ? { type: 'identifier' } : identifier,\n        '_',\n      ],\n      postprocess: text,\n    },\n    { name: 'Identity', symbols: [{ literal: 'ø' }, '_'], postprocess: text },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('symbol') ? { type: 'symbol' } : symbol, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('integer') ? { type: 'integer' } : integer, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [lexer.has('octal') ? { type: 'octal' } : octal, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('hexadecimal') ? { type: 'hexadecimal' } : hexadecimal,\n        '_',\n      ],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('measurement') ? { type: 'measurement' } : measurement,\n        '_',\n      ],\n      postprocess: text,\n    },\n    {\n      name: 'Identity',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n        '_',\n      ],\n      postprocess: ([t]) => t.text.slice(1, -1),\n    },\n    {\n      name: 'Symbol',\n      symbols: [lexer.has('symbol') ? { type: 'symbol' } : symbol, '_'],\n      postprocess: text,\n    },\n    {\n      name: 'Symbol',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n        '_',\n      ],\n      postprocess: ([t]) => t.text.slice(1, -1),\n    },\n    {\n      name: 'Record',\n      symbols: [{ literal: '{' }, '_', { literal: '}' }, '_'],\n      postprocess: empty,\n    },\n    { name: 'Record$ebnf$1', symbols: [] },\n    {\n      name: 'Record$ebnf$1$subexpression$1',\n      symbols: [{ literal: ',' }, '_', 'Property'],\n      postprocess: ([, , p]) => p,\n    },\n    {\n      name: 'Record$ebnf$1',\n      symbols: ['Record$ebnf$1', 'Record$ebnf$1$subexpression$1'],\n      postprocess: d => d[0].concat([d[1]]),\n    },\n    {\n      name: 'Record',\n      symbols: [\n        { literal: '{' },\n        '_',\n        'Property',\n        'Record$ebnf$1',\n        { literal: '}' },\n        '_',\n      ],\n      postprocess: ([, , p, ps]) => g.propertiesToRecord([p, ...ps]),\n    },\n    {\n      name: 'Property',\n      symbols: ['Symbol', { literal: ':' }, '_', 'Value'],\n      postprocess: ([k, , , v]) => g.property(k, v),\n    },\n    { name: 'Value', symbols: ['StringLiteral', '_'], postprocess: id },\n    { name: 'Value', symbols: ['NumericLiteral', '_'], postprocess: id },\n    {\n      name: 'Value',\n      symbols: [lexer.has('boolean') ? { type: 'boolean' } : boolean, '_'],\n      postprocess: d => g.boolean(JSON.parse(d[0].value.toLowerCase())),\n    },\n    { name: 'Value$ebnf$1', symbols: [] },\n    {\n      name: 'Value$ebnf$1$subexpression$1',\n      symbols: [{ literal: ',' }, '_', 'Value'],\n      postprocess: ([, , v]) => v,\n    },\n    {\n      name: 'Value$ebnf$1',\n      symbols: ['Value$ebnf$1', 'Value$ebnf$1$subexpression$1'],\n      postprocess: d => d[0].concat([d[1]]),\n    },\n    {\n      name: 'Value',\n      symbols: [\n        { literal: '[' },\n        '_',\n        'Value',\n        'Value$ebnf$1',\n        { literal: ']' },\n        '_',\n      ],\n      postprocess: ([, , v, vs]) => [v, ...vs],\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('singleQuotedString')\n          ? { type: 'singleQuotedString' }\n          : singleQuotedString,\n      ],\n      postprocess: d => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('doubleQuotedString')\n          ? { type: 'doubleQuotedString' }\n          : doubleQuotedString,\n      ],\n      postprocess: d => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('tickedString') ? { type: 'tickedString' } : tickedString,\n      ],\n      postprocess: d => g.string(d[0].value),\n    },\n    {\n      name: 'StringLiteral',\n      symbols: [\n        lexer.has('taggedString') ? { type: 'taggedString' } : taggedString,\n      ],\n      postprocess: d => {\n        const parts = separateTagFromString(d[0].value);\n        return g.tagged(parts.tag, parts.value);\n      },\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('integer') ? { type: 'integer' } : integer],\n      postprocess: d => g.integer(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('decimal') ? { type: 'decimal' } : decimal],\n      postprocess: d => g.decimal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [\n        lexer.has('hexadecimal') ? { type: 'hexadecimal' } : hexadecimal,\n      ],\n      postprocess: d => g.hexadecimal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [lexer.has('octal') ? { type: 'octal' } : octal],\n      postprocess: d => g.octal(d[0].value),\n    },\n    {\n      name: 'NumericLiteral',\n      symbols: [\n        lexer.has('measurement') ? { type: 'measurement' } : measurement,\n      ],\n      postprocess: d => {\n        const parts = separateNumberFromUnits(d[0].value);\n        return g.measurement(parts.unit, parts.value);\n      },\n    },\n    {\n      name: '_$ebnf$1',\n      symbols: [lexer.has('whitespace') ? { type: 'whitespace' } : whitespace],\n      postprocess: id,\n    },\n    { name: '_$ebnf$1', symbols: [], postprocess: () => null },\n    { name: '_', symbols: ['_$ebnf$1'], postprocess: empty },\n    {\n      name: 'Comment',\n      symbols: [\n        lexer.has('lineComment') ? { type: 'lineComment' } : lineComment,\n      ],\n      postprocess: empty,\n    },\n    { name: 'EOL', symbols: [{ literal: '\\n' }], postprocess: empty },\n  ],\n  ParserStart: 'GramSeq',\n};\n\nexport default grammar;\n","export const INCOMPLETE_PARSE = 'Incomplete parse.';\nexport const SYNTAX_ERROR = 'Syntax error at';\n","import { ParserFunction, Plugin } from 'unified';\n// import {Node as UnistNode} from 'unist';\nimport { VFile } from 'vfile';\nimport nearley from 'nearley';\n\nimport grammar from './gram-grammar';\nimport * as errors from './gram-errors';\n\nimport { Point } from 'unist';\nimport { LexerState } from 'nearley';\nimport { Token } from 'moo';\n\nconst lexerLocation = (state: LexerState): Point => {\n  return {\n    line: state.line,\n    column: state.col,\n  };\n};\n\nconst tokenLocation = (token: Token) => {\n  return {\n    line: token.line,\n    column: token.col,\n  };\n};\n\nexport const parse: ParserFunction = (text: string, file: VFile) => {\n  const nearleyParser = new nearley.Parser(\n    nearley.Grammar.fromCompiled(grammar)\n  );\n  try {\n    const parsed = nearleyParser.feed(text);\n    if (parsed.results[0] === undefined && parsed.lexerState) {\n      const location = lexerLocation(parsed.lexerState);\n      file.fail(errors.INCOMPLETE_PARSE, location);\n    }\n    if (parsed.results.length > 1) {\n      file.info('[WARN] parsing is ambiguous');\n    }\n    return parsed.results[0] || { type: 'error' };\n  } catch (e) {\n    const location = e.token ? tokenLocation(e.token) : { line: 0, column: 0 };\n    file.fail(e.message, location);\n  }\n};\nexport interface GramParserSettings {\n  strict: boolean;\n}\n\nconst gramParserPlugin: Plugin<GramParserSettings[]> = function() {\n  this.Parser = parse;\n};\n\nexport default gramParserPlugin;\n","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (process.env.NODE_ENV !== 'production') {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you don’t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID. If you use Expo, install `expo-random` ' +\n        'and use `nanoid/async`.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you don’t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given node’s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","module.exports = identity\nfunction identity(d) {\n  return d\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","export const alphabets = {\n  base2: '01',\n  dieBase6: '⚀⚁⚂⚃⚄⚅',\n  base8: '01234567',\n  base10: '0123456789',\n  astrologyBase12: '♈︎♉︎♊︎♋︎♌︎♍︎♎︎♏︎♐︎♑︎♒︎♓︎',\n  base11: '0123456789a',\n  chessBase12: '♚♛♜♝♞♟♔♕♖♗♘♙',\n  base16: '0123456789abcdef',\n  dominoBase28: '🁣🁤🁫🁥🁬🁳🁦🁭🁴🁻🁧🁮🁵🁼🂃🁨🁯🁶🁽🂊🂋🁩🁰🁷🁾🂅🂌🂓',\n  base32: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  zBase32: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  crock32: '0123456789ABCDEFGHJKMNPQRSTVWXYZ',\n  base32Hex: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  base36: '0123456789abcdefghijklmnopqrstuvwxyz',\n  mahjongBase43: '🀑🀒🀓🀔🀕🀖🀗🀘🀙🀚🀛🀜🀝🀞🀟🀠🀡🀇🀈🀉🀊🀋🀌🀍🀎🀏🀀🀁🀂🀃🀄︎🀅🀆🀐🀢🀣🀤🀥🀦🀧🀨🀩🀪',\n  cards56: '🂡🂢🂣🂤🂥🂦🂧🂨🂩🂪🂫🂬🂭🂮🂱🂲🂳🂴🂵🂶🂷🂸🂹🂺🂻🂼🂽🂾🃁🃂🃃🃄🃅🃆🃇🃈🃉🃊🃋🃌🃍🃎🃑🃒🃓🃔🃕🃖🃗🃘🃙🃝🃞',\n  base58: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',\n  flickrBase58: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ',\n  base62: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  base64: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_@',\n  cookieBase90:\n    \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~\",\n};\n\n","import { IDGenerator } from './generator-type';\n\n/**\n * Creates an IDGenerator based on incrementing numbers.\n *\n */\nexport const counterIDGenerator = (prefix?: string): IDGenerator => {\n  let nextid = 0;\n  return {\n    generate: () => `${prefix || ''}${nextid++}`,\n  };\n};\n","import { customAlphabet } from 'nanoid';\nimport { alphabets } from './identity-alphabets';\nimport { IDGenerator } from './generator-type';\n\n/**\n * Factory for creating an IDGenerator based on\n * [nanoid](https://github.com/ai/nanoid)\n *\n */\nexport const nanoidGenerator = (\n  alphabet: string = alphabets.base64,\n  size: number = 21,\n  prefix?: string\n): IDGenerator => {\n  const generator = customAlphabet(alphabet, size);\n  return {\n    generate: () => {\n      return prefix ? prefix + generator() : generator();\n    },\n  };\n};\n","import { Plugin, Transformer } from 'unified';\nimport { Node as UnistNode } from 'unist';\n\nimport { isGramPath } from '@gram-data/gram-ast';\nimport { alphabets } from './identity-alphabets';\nimport { IDGenerator } from './generator-type';\nimport { counterIDGenerator } from './counter-generator';\nimport { nanoidGenerator } from './nanoid-generator';\n\nimport visit from 'unist-util-visit';\n\nexport interface IdentityPluginSettings {\n  generator: 'counter' | 'nanoid';\n  alphabet?: string;\n  prefix?: string;\n}\n\nconst defaultSettings = {\n  generator: 'counter',\n  alphabet: alphabets.base58,\n  prefix: undefined,\n};\n\nexport const gramIdentityPlugin: Plugin<IdentityPluginSettings[]> = (\n  settings: IdentityPluginSettings\n) => {\n  const s = { ...defaultSettings, ...settings };\n\n  const identification: Transformer = (tree: UnistNode) => {\n    let generator: IDGenerator;\n    switch (s.generator) {\n      case 'nanoid':\n        generator = nanoidGenerator(s.alphabet, 21, s.prefix);\n        break;\n      case 'counter':\n      default:\n        generator = counterIDGenerator(s.prefix);\n    }\n\n    visit(tree, (element: UnistNode) => {\n      if (isGramPath(element)) {\n        element.id = element.id || generator.generate();\n      }\n    });\n  };\n\n  return identification;\n};\n\nexport default gramIdentityPlugin;\n","import {\n  BooleanLiteral,\n  StringLiteral,\n  DateLiteral,\n  IntegerLiteral,\n  MeasurementLiteral,\n  DecimalLiteral,\n  HexadecimalLiteral,\n  OctalLiteral,\n  TimeLiteral,\n  DurationLiteral,\n  GramRecordValue,\n  GramLiteral,\n  isGramLiteralArray,\n  isGramLiteral,\n  isGramRecord,\n  GramRecord,\n  TaggedTextLiteral,\n} from '@gram-data/gram-ast';\n\nimport {\n  Parent as UnistParent,\n  Literal as UnistLiteral,\n  Node as UnistNode,\n} from 'unist';\n\nexport const iso8601Year = /^([+-]\\d{4,}\\b|\\d{4})$/;\nexport const iso8601YearMonth = /^([0-9]{4})-(1[0-2]|0[1-9])$/;\nexport const iso8601YearMonthDay = /^([0-9]{4})(-?)(1[0-2]|0[1-9])\\2(3[01]|0[1-9]|[12][0-9])$/;\nexport const iso8601OrdinalDate = /^([0-9]{4})-?(36[0-6]|3[0-5][0-9]|[12][0-9]{2}|0[1-9][0-9]|00[1-9])$/;\nexport const iso8601WeekOfYear = /^([0-9]{4})-?W(5[0-3]|[1-4][0-9]|0[1-9])$/;\nexport const iso8601WeekDate = /^([0-9]{4})-?W(5[0-3]|[1-4][0-9]|0[1-9])-?([1-7])$/;\nexport const iso8601LocalTime = /^(2[0-3]|[01][0-9]):?([0-5][0-9])(:?([0-5][0-9](\\.[0-9]{3})?))?$/;\n// export const iso8601Time = /^(2[0-3]|[01][0-9]):?([0-5][0-9]):?([0-5][0-9](\\.[0-9]{3})?)?(Z|[+-](?:2[0-3]|[01][0-9])(?::?(?:[0-5][0-9]))?)?$/;\nexport const iso8601Time = /^(2[0-3]|[01][0-9]):?([0-5][0-9]):?([0-5][0-9](\\.[0-9]{3})?)?(Z|([+-])((?:2[0-3]|[01][0-9]))(?::?([0-5][0-9]))?)?$/;\nexport const iso8601Duration = /^P((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T((\\d+)H)?((\\d+)M)?((\\d+)S)?)?$/;\nexport const iso8601Repeat = /^R(\\d*)$/;\n\nclass InvalidAstError extends Error {\n  ast: UnistParent | UnistLiteral | UnistNode;\n  constructor(ast: UnistParent | UnistLiteral | UnistNode) {\n    super('AST is invalid:' + JSON.stringify(ast));\n    this.name = 'InvalidAstError';\n    this.ast = ast;\n  }\n}\n\n/**\n * Type of function used to evaluate text literal values.\n *\n */\nexport type LiteralValueEvaluator = (ast: GramLiteral) => any;\n\n/**\n * Evaluates data structures and text literal values, returning\n * native objects and primitive values.\n *\n * @see {@linkcode valueOfLiteral} for default literal value evaluator\n */\nexport const valueOf = (\n  recordValue: GramRecordValue | GramRecord,\n  literalValueEvaluator = valueOfLiteral\n): any => {\n  if (isGramRecord(recordValue)) {\n    return Array.from(recordValue).reduce((acc, [k, v]) => {\n      acc[k] = valueOf(v);\n      return acc;\n    }, {} as { [key: string]: any });\n  } else {\n    if (isGramLiteralArray(recordValue)) {\n      return recordValue.map((v: GramLiteral) => valueOf(v));\n    } else if (isGramLiteral(recordValue)) {\n      return literalValueEvaluator(recordValue as GramLiteral);\n    } else if (typeof recordValue === 'object') {\n      return Object.entries(recordValue).reduce((acc, [k, v]) => {\n        acc[k] = valueOf(v);\n        return acc;\n      }, {} as { [key: string]: any });\n    }\n  }\n};\n\nfunction assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\n\nexport const valueOfLiteral = (ast: GramLiteral): any => {\n  switch (ast.type) {\n    case 'boolean':\n      return valueOfBoolean(ast);\n    case 'string':\n      return valueOfString(ast);\n    case 'integer':\n      return valueOfInteger(ast);\n    case 'decimal':\n      return valueOfDecimal(ast);\n    case 'hexadecimal':\n      return valueOfHexadecimal(ast);\n    case 'octal':\n      return valueOfOctal(ast);\n    case 'tagged':\n      switch (ast.tag) {\n        case 'date':\n          return valueOfDate(ast as DateLiteral);\n        case 'time':\n          return valueOfTime(ast as TimeLiteral);\n        case 'datetime':\n          return 'TODO';\n        case 'interval':\n          return 'TODO';\n        case 'duration':\n          return 'TODO';\n        case 'uri':\n          return ast.value;\n        case 'wkt':\n          return 'TODO';\n        default:\n          return 'TODO';\n      }\n    case 'measurement':\n      return 'measure by measure';\n    default:\n      return assertNever(ast);\n  }\n};\n\nexport const valueOfBoolean = (ast: BooleanLiteral) =>\n  ast.value && ast.value.toLowerCase() === 'true';\n\nexport const valueOfString = (ast: StringLiteral) => {\n  if (ast.value) {\n    return ast.value;\n  }\n  throw new InvalidAstError(ast);\n};\n\nexport const valueOfTaggedLiteral = (ast: TaggedTextLiteral) => {\n  if (ast.value) {\n    return ast.value;\n  }\n  throw new InvalidAstError(ast);\n};\n\nexport const valueOfDate = (ast: DateLiteral) => {\n  if (ast.value) {\n    let extracted = iso8601YearMonthDay.exec(ast.value);\n    if (extracted) {\n      return new Date(\n        Date.UTC(\n          Number.parseInt(extracted[1]),\n          Number.parseInt(extracted[3]) - 1,\n          Number.parseInt(extracted[4])\n        )\n      );\n    }\n    extracted = iso8601YearMonth.exec(ast.value);\n    if (extracted) {\n      return new Date(\n        Date.UTC(Number.parseInt(extracted[1]), Number.parseInt(extracted[2]))\n      );\n    }\n    extracted = iso8601Year.exec(ast.value);\n    if (extracted) {\n      return new Date(Number.parseInt(extracted[1]), 1);\n    }\n    throw SyntaxError(`Unable to parse date from ${ast.value}`);\n  }\n  throw new InvalidAstError(ast);\n};\n\nconst MILLIS_IN_A_SECOND = 1000;\nconst MILLIS_IN_A_MINUTE = MILLIS_IN_A_SECOND * 60;\nconst MILLIS_IN_AN_HOUR = MILLIS_IN_A_MINUTE * 60;\nconst MILLIS_IN_A_DAY = MILLIS_IN_AN_HOUR * 24;\nconst MILLIS_IN_A_MONTH = MILLIS_IN_A_DAY * 30;\nconst MILLIS_IN_A_YEAR = MILLIS_IN_A_DAY * 365;\n\n/**\n * Value of time as number of milliseconds since midnight.\n *\n * @param ast\n */\nexport const valueOfTime = (ast: TimeLiteral) => {\n  if (ast.value) {\n    const extracted = iso8601Time.exec(ast.value);\n    if (extracted) {\n      const hours = Number.parseInt(extracted[1]);\n      const minutes = extracted[1] ? Number.parseInt(extracted[2]) : 0;\n      const seconds = extracted[3] ? Number.parseFloat(extracted[3]) : 0.0;\n      const tz = extracted[5];\n\n      // console.log('time', extracted, hours, minutes, seconds, tz);\n\n      const millis =\n        hours * MILLIS_IN_AN_HOUR +\n        minutes * MILLIS_IN_A_MINUTE +\n        seconds * MILLIS_IN_A_SECOND;\n\n      if (tz) {\n        const offset =\n          tz === 'Z'\n            ? 0\n            : Number.parseInt(extracted[7]) * MILLIS_IN_AN_HOUR +\n              Number.parseInt(extracted[8] || '0') * MILLIS_IN_A_MINUTE;\n        return new Date(\n          extracted[6] === '-' ? millis + offset : millis - offset\n        );\n      }\n      return new Date(millis);\n    }\n    throw SyntaxError(`Unable to parse time from ${ast.value}`);\n  }\n  throw new InvalidAstError(ast);\n};\n\n/**\n * Evaluates the duration as a total of milliseconds, unreliably estimating milliseconds\n * per year or month. Reliable duration values can only be calculated with precision\n * of days, hours, minutes or seconds.\n *\n * @param ast\n */\nexport const valueOfDuration = (ast: DurationLiteral) => {\n  if (ast.value) {\n    const extracted = iso8601Duration.exec(ast.value);\n    if (extracted) {\n      const years = extracted[2] ? Number.parseInt(extracted[2]) : 0;\n      const months = extracted[4] ? Number.parseInt(extracted[4]) : 0;\n      const days = extracted[6] ? Number.parseInt(extracted[6]) : 0;\n      const hours = extracted[9] ? Number.parseInt(extracted[9]) : 0;\n      const minutes = extracted[11] ? Number.parseInt(extracted[11]) : 0;\n      const seconds = extracted[13] ? Number.parseInt(extracted[13]) : 0;\n\n      // console.log('duration', extracted, years, months, days, hours, minutes, seconds);\n\n      const millis =\n        years * MILLIS_IN_A_YEAR +\n        months * MILLIS_IN_A_MONTH +\n        days * MILLIS_IN_A_DAY +\n        hours * MILLIS_IN_AN_HOUR +\n        minutes * MILLIS_IN_A_MINUTE +\n        seconds * MILLIS_IN_A_SECOND;\n\n      return new Date(millis);\n    }\n    throw SyntaxError(`Unable to parse duration from ${ast.value}`);\n  }\n  throw new InvalidAstError(ast);\n};\n\nexport const valueOfInteger = (ast: IntegerLiteral) => {\n  if (ast.value) {\n    return Number.parseInt(ast.value);\n  } else throw new InvalidAstError(ast);\n};\n\nexport const valueOfMeasurement = (ast: MeasurementLiteral) => {\n  if (ast.value) {\n    return Number.parseInt(ast.value);\n  } else throw new InvalidAstError(ast);\n};\n\nexport const valueOfDecimal = (ast: DecimalLiteral) => {\n  if (ast.value) {\n    return Number.parseFloat(ast.value);\n  } else throw new InvalidAstError(ast);\n};\n\nexport const valueOfHexadecimal = (ast: HexadecimalLiteral) => {\n  if (ast.value) {\n    return Number.parseInt(ast.value, 16);\n  } else throw new InvalidAstError(ast);\n};\n\nexport const valueOfOctal = (ast: OctalLiteral) => {\n  if (ast.value) {\n    return Number.parseInt(ast.value, 8);\n  } else throw new InvalidAstError(ast);\n};\n","import { Plugin, Transformer } from 'unified';\nimport { Node as UnistNode } from 'unist';\n\nimport { isGramPath } from '@gram-data/gram-ast';\nimport { valueOf, valueOfLiteral, LiteralValueEvaluator } from './gram-value';\n\nimport visit from 'unist-util-visit';\n\nexport interface ValuePluginSettings {\n  literalValueEvaluator?: LiteralValueEvaluator;\n}\n\nconst defaultSettings = {\n  literalValueEvaluator: valueOfLiteral,\n};\n\nexport const gramValuePlugin: Plugin<ValuePluginSettings[]> = (\n  settings: ValuePluginSettings\n) => {\n  const s = { ...defaultSettings, ...settings };\n\n  const recordValueEvaluator: Transformer = (tree: UnistNode) => {\n    visit(tree, (element: UnistNode) => {\n      if (isGramPath(element) && element.record) {\n        element.data = Object.assign(element.data || {}, {\n          value: valueOf(element.record, s.literalValueEvaluator),\n        });\n      }\n    });\n  };\n\n  return recordValueEvaluator;\n};\n\nexport default gramValuePlugin;\n","import {\n  gramIdentityPlugin,\n  IdentityPluginSettings,\n} from \"@gram-data/gram-identity\";\nimport { gramValuePlugin, ValuePluginSettings } from \"@gram-data/gram-value\";\n\nexport { IdentityPluginSettings, ValuePluginSettings };\n\nexport const plugins = [gramIdentityPlugin, gramValuePlugin];\n","import {\n  GramNode,\n  GramEdge,\n  GramRecord,\n  GramPath,\n  GramRecordValue,\n  GramProperty,\n  isGramLiteral,\n  isGramNode,\n  isGramEdge,\n  isGramEmptyPath,\n  isGramLiteralArray,\n  GramLiteral,\n  isGramPath,\n  isGramRecord,\n} from '@gram-data/gram-ast';\n\nconst isEmpty = (r: GramRecord) => r.size === 0;\n\nfunction assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x);\n}\nconst toStringLiteral = (l: GramLiteral): string => {\n  switch (l.type) {\n    case 'integer':\n    case 'boolean':\n    case 'octal':\n    case 'hexadecimal':\n    case 'decimal':\n      return l.value;\n    case 'string':\n      return `\\`${l.value}\\``;\n    case 'tagged':\n      return `${l.tag}\\`${l.value}\\``;\n    case 'measurement':\n      return `${l.value}${l.unit}`;\n    default:\n      return assertNever(l);\n  }\n};\n\nconst toStringValue = (v: GramRecordValue) => {\n  if (isGramLiteralArray(v)) {\n    return `[${v.map((l: GramLiteral) => toStringLiteral(l)).join(',')}]`;\n  } else if (isGramLiteral(v)) {\n    return toStringLiteral(v);\n  } else {\n    return objectToString(v);\n  }\n};\n\nconst propertyToString = (property: GramProperty) =>\n  `${property.name}:${toStringValue(property.value)}`;\n\nconst recordToString = (record: GramRecord): string => {\n  const fields = Array.from(\n    record,\n    ([k, v], i: number) => `${i > 0 ? ',' : ''}${k}:${toStringValue(v)}`\n  );\n  return `{${fields.join('')}}`;\n};\n\nconst arrayToString = (xs: any[]): string => `[${xs.map(stringify).join(',')}]`;\n\nconst objectToString = (o: { [key: string]: any }): string => {\n  const fields = Object.entries(o).map(\n    ([name, value], i: number) =>\n      `${i > 0 ? ',' : ''}${name}:${stringify(value)}`\n  );\n  return `{${fields.join('')}}`;\n};\n\nconst elementContentToString = (ast: GramPath): string => {\n  const idString = ast.id || '';\n  const labelsString =\n    ast.labels && ast.labels.length > 0 ? ':' + ast.labels.join(':') : '';\n  const recordString =\n    ast.record && !isEmpty(ast.record) ? recordToString(ast.record) : '';\n  return `${idString}${labelsString}${\n    ((idString.length > 0 || labelsString.length > 0) && recordString.length) >\n    0\n      ? ' '\n      : ''\n  }${recordString}`;\n};\n\nconst nodeToString = (ast: GramNode): string =>\n  `(${elementContentToString(ast)})`;\n\nconst edgeToString = (ast: GramEdge): string => {\n  const left = ast.kind === 'left' ? '<-' : '-';\n  const right = ast.kind === 'right' ? '->' : '-';\n\n  const leftNode = isGramNode(ast.children[0])\n    ? nodeToString(ast.children[0])\n    : edgeToString(ast.children[0]);\n  const rightNode = isGramNode(ast.children[1])\n    ? nodeToString(ast.children[1])\n    : edgeToString(ast.children[1]);\n  const content = elementContentToString(ast);\n  const boxedContent = content.length > 0 ? `[${content}]` : '';\n\n  return `${leftNode}${left}${boxedContent}${right}${rightNode}`;\n};\n\nconst pathCompositionToString = (ast: GramPath): string => {\n  const lhs =\n    ast.children && ast.children.length > 0\n      ? pathToString(ast.children[0])\n      : '';\n  const rhs =\n    ast.children && ast.children.length > 1\n      ? pathToString(ast.children[1])\n      : '';\n  const relation =\n    ast.kind === 'left'\n      ? '<--'\n      : ast.kind === 'right'\n      ? '-->'\n      : ast.kind === 'either'\n      ? '--'\n      : lhs.length > 0 && rhs.length > 0\n      ? ','\n      : '';\n  const content = elementContentToString(ast);\n\n  return `[${content}${relation.length > 0 ? ' ' : ''}${relation}${\n    lhs.length > 0 ? ' ' : ''\n  }${lhs}${rhs.length > 0 ? ' ' : ''}${rhs}]`;\n};\n\nconst pairToString = (ast: GramPath): string => {\n  const lhs =\n    ast.children && ast.children.length > 0\n      ? pathToString(ast.children[0])\n      : '';\n  const rhs =\n    ast.children && ast.children.length > 1\n      ? pathToString(ast.children[1])\n      : '';\n  return `${lhs},${rhs.length > 0 ? ' ' : ''}${rhs}`;\n};\n\nconst hasAttributes = (p: GramPath) => p.id || p.labels || p.record;\n\nconst pathToString = (ast?: GramPath): string => {\n  const pathExpression = ast\n    ? `${\n        isGramEmptyPath(ast)\n          ? ''\n          : isGramNode(ast)\n          ? nodeToString(ast)\n          : isGramEdge(ast)\n          ? edgeToString(ast)\n          : hasAttributes(ast)\n          ? pathCompositionToString(ast)\n          : pairToString(ast)\n      }`\n    : '';\n  return pathExpression;\n};\n\nexport const stringify = (ast: any | any[]): string => {\n  if (Array.isArray(ast)) {\n    if (ast.length > 0) {\n      const element = ast[0];\n      if (isGramPath(element)) {\n        return ast.map(stringify).join(' ');\n      } else {\n        return arrayToString(ast);\n      }\n    } else return '[]';\n  } else if (ast.type !== undefined) {\n    switch (ast.type) {\n      case 'path':\n        return pathToString(ast as GramPath);\n      case 'seq':\n        return stringify(ast.children as GramPath[]);\n      case 'property':\n        return propertyToString(ast);\n      default:\n        if (isGramLiteral(ast)) {\n          return toStringLiteral(ast);\n        }\n        return objectToString(ast);\n    }\n  } else if (typeof ast === 'object') {\n    if (isGramRecord(ast)) {\n      return recordToString(ast);\n    } else {\n      return objectToString(ast);\n    }\n  }\n\n  throw new Error(`Can't stringify <${ast}>`);\n};\n\nexport default stringify;\n","/**\n * gram package.\n *\n * @packageDocumentation\n */\n\nimport unified from 'unified';\nimport { VFileCompatible } from 'vfile';\nimport { GramSeq } from '@gram-data/gram-ast';\nimport { gramParserPlugin } from '@gram-data/gram-parse';\nimport * as gramPresetBasic from '@gram-data/gram-preset-basic';\nimport { toGram } from '@gram-data/gram-stringify';\n\nconst processor = (): unified.Processor => {\n  return unified()\n    .use(gramParserPlugin)\n    .use(gramPresetBasic);\n};\n\n/**\n * Parse text into an ast.\n * @param src gram formatted text\n */\nexport const parse = (src: VFileCompatible): GramSeq =>\n  processor().runSync(processor().parse(src)) as GramSeq;\n\nexport { toGram };\n\nexport default {\n  parse,\n  toGram,\n};\n","import {\n  GramEdge,\n  GramNode,\n  GramPath,\n  GramSeq,\n  isGramNode,\n  isGramSeq,\n} from '@gram-data/gram-ast';\nimport { edge } from '@gram-data/gram-builder';\n\nexport const count = (p: GramPath): number => {\n  return (p.children as GramPath[]).reduce(\n    (acc: number, child: GramPath) => acc + count(child),\n    1\n  );\n};\n\nexport const head = (p: GramPath): GramNode => {\n  return p.children === undefined || p.children.length === 0\n    ? (p as GramNode)\n    : head(p.children[0]);\n};\n\nexport const tail = (p: GramPath): GramNode => {\n  return p.children === undefined || p.children.length === 0\n    ? (p as GramNode)\n    : tail(p.children[p.children.length - 1]);\n};\n\nexport const merge = (_: GramPath, next: GramPath) => {\n  // return path\n  return next;\n};\n\nexport const identity = (p: GramPath) => {\n  return p.id;\n};\n\n/**\n * Node set projected from within a path.\n *\n * @param p paths from which to project nodes\n */\nexport const nodes = (p: GramPath | GramPath[] | GramSeq): GramNode[] => {\n  if (isGramNode(p)) return [p];\n  if (isGramSeq(p)) return nodes(p.children);\n  if (Array.isArray(p)) {\n    const unidentifiedNodes: GramNode[] = [];\n    const nodemap = p\n      .map(nodes)\n      .flat()\n      .reduce((acc: Map<string, GramNode>, child: GramNode) => {\n        if (child.id) {\n          if (acc.has(child.id)) {\n            acc.set(child.id, Object.assign(acc.get(child.id), child));\n          } else {\n            acc.set(child.id, child);\n          }\n        } else {\n          unidentifiedNodes.push(child);\n        }\n        return acc;\n      }, new Map<string, GramNode>());\n    return Array.from(nodemap.values()).concat(unidentifiedNodes);\n  } else {\n    return nodes(p.children);\n  }\n};\n\nexport const edges = (p: GramPath): GramEdge[] => {\n  return p === undefined\n    ? []\n    : p.children === undefined || p.children.length === 0\n    ? []\n    : p.children.length === 2\n    ? [\n        ...edges(p.children[0]),\n        ...(p.kind !== undefined && p.kind !== 'pair'\n          ? [\n              edge(\n                [tail(p.children[0]), head(p.children[1])],\n                p.kind,\n                p.id,\n                p.labels,\n                p.record\n              ),\n            ]\n          : ([] as GramEdge[])),\n        ...edges(p.children[1]),\n      ]\n    : p.children.reduce(\n        (acc: GramEdge[], child: GramPath) => [...acc, ...edges(child)],\n        [] as GramEdge[]\n      );\n};\n","import Graph, {MultiGraph} from 'graphology';\nimport gram from '@gram-data/gram';\nimport * as ast from '@gram-data/gram-ast';\nimport * as ops from '@gram-data/gram-ops';\nimport * as value from '@gram-data/gram-value';\n\nconst MISSING_ID = \"🤨\";\n\nconst id = (p: ast.GramPath) => p.id || MISSING_ID;\n\ninterface GraphClassConstructor {\n  new(): Graph;\n}\n\n/**\n * Parse gram textual format, producing a Graphology graph.\n * \n * @param src gram text\n * @param graphConstructor defaults to MultiGraph\n */\nconst parse = (src:string, graphConstructor?:GraphClassConstructor) => {\n  const graph = (graphConstructor !== undefined) ? new graphConstructor() : new MultiGraph();\n  const seq = gram.parse(src);\n  if (ast.isGramSeq(seq)) {\n    const nodes = ops.nodes(seq);\n    nodes.forEach( n => {\n      graph.mergeNode(id(n), n.record ? value.valueOf(n.record) : {})\n    });\n    seq.children.map(p => ops.edges(p)).flat().forEach( e => {\n      const [source, target] = e.kind === 'right'  ? [ops.head(e), ops.tail(e)] : [ops.tail(e), ops.head(e)];\n      graph.mergeEdgeWithKey(id(e), id(source), id(target), e.record ? value.valueOf(e.record) : {});\n    });\n  }\n  return graph;\n}\n\nconst hasProperties = (o:any) => Object.keys(o).length > 0\n\nconst stringifyAttributes = (attributes: any) => hasProperties(attributes) ? JSON.stringify(attributes) : '';\n\nconst stringifyNode = (node:string, attributes: any) => {\n  return `(${node}${stringifyAttributes(attributes)})`;\n}\n\nconst stringifyEdge = (key:string, attributes:any, source:string, target:string, sourceAttributes:any, targetAttributes:any, undirected:boolean, generatedKey:boolean) => {\n  const edgeAttributes = (generatedKey || hasProperties(attributes)) ? `${generatedKey ? '' : key}${stringifyAttributes(attributes)}` : '';\n  const edgeString = `-${edgeAttributes}-${undirected ? '' : '>'}`;\n  return `${stringifyNode(source, sourceAttributes)}${edgeString}${stringifyNode(target, targetAttributes)}`;\n}\n\nconst stringify = (graph:Graph) => {\n  const tokens:String[] = [];\n  const stringifiedNodeKeys = new Set<string>();\n  graph.forEachDirectedEdge( (key, attributes, source, target, sourceAttributes, targetAttributes, undirected, generatedKey) => {\n    stringifiedNodeKeys.add(source);\n    stringifiedNodeKeys.add(target);\n    tokens.push(stringifyEdge(key, attributes, source, target, sourceAttributes, targetAttributes, undirected, generatedKey))\n  });\n  graph.forEachNode( (key, attributes) => {\n    if (!stringifiedNodeKeys.has(key)) tokens.push(stringifyNode(key, attributes))\n  })\n  return tokens.join(\"\\n\");\n}\n\nexport {\n  parse,\n  stringify\n}\n\nexport default {\n  parse,\n  stringify\n}"],"names":["wrap","slice","stringify","own","buffer","proc","p","assertPath","VFile","VMessage","require$$0","trough","plain","bail","this","boolean","hexadecimal","octal","measurement","decimal","integer","taggedString","doubleQuotedString","singleQuotedString","tickedString","symbol","identifier","checkIdentifierRegex","RegExp","source","isValidIdentifier","s","test","isGramSeq","o","type","isGramPath","EMPTY_PATH_ID","isGramEmptyPath","id","isGramNode","children","length","isGramEdge","kind","undefined","every","child","isGramRecord","v","Map","isGramLiteralArray","Array","isArray","isGramLiteral","value","normalizeChildren","Function","res","dateToYMD","d","toISOString","seq","paths","labels","record","cons","members","attributes","element","EMPTY_PATH","lhs","empty","node","edge","path","pair","emptyRecord","propertiesToRecord","properties","reduce","acc","set","name","objectToRecord","Object","entries","k","propertyValue","property","Node","map","Date","date","string","toString","Error","tagged","tag","String","unit","flatten","xs","depth","flat","filter","x","lexer","moo","compile","whitespace","match","lineBreaks","lineComment","tokens","ø","text","token","separateTagFromString","taggedStringValue","valueParts","separateNumberFromUnits","measurementValue","grammar","Lexer","ParserRules","symbols","postprocess","pp","concat","g","n","es","np","literal","attrs","attr","rhs","lp","rp","_","reject","label","has","t","ps","JSON","parse","toLowerCase","vs","parts","ParserStart","INCOMPLETE_PARSE","lexerLocation","state","line","column","col","tokenLocation","file","nearleyParser","nearley","Parser","Grammar","fromCompiled","parsed","feed","results","lexerState","location","fail","errors","info","e","message","gramParserPlugin","convert","color","CONTINUE","visitParents","SKIP","EXIT","alphabets","base2","dieBase6","base8","base10","astrologyBase12","base11","chessBase12","base16","dominoBase28","base32","zBase32","crock32","base32Hex","base36","mahjongBase43","cards56","base58","flickrBase58","base62","base64","cookieBase90","counterIDGenerator","prefix","nextid","generate","nanoidGenerator","alphabet","size","generator","customAlphabet","defaultSettings","gramIdentityPlugin","settings","identification","tree","visit","iso8601Year","iso8601YearMonth","iso8601YearMonthDay","iso8601Time","InvalidAstError","ast","valueOf","recordValue","literalValueEvaluator","valueOfLiteral","from","assertNever","valueOfBoolean","valueOfString","valueOfInteger","valueOfDecimal","valueOfHexadecimal","valueOfOctal","valueOfDate","valueOfTime","extracted","exec","UTC","Number","parseInt","SyntaxError","MILLIS_IN_A_SECOND","MILLIS_IN_A_MINUTE","MILLIS_IN_AN_HOUR","hours","minutes","seconds","parseFloat","tz","millis","offset","gramValuePlugin","recordValueEvaluator","data","assign","plugins","isEmpty","r","toStringLiteral","l","toStringValue","join","objectToString","propertyToString","recordToString","fields","i","arrayToString","elementContentToString","idString","labelsString","recordString","nodeToString","edgeToString","left","right","leftNode","rightNode","content","boxedContent","pathCompositionToString","pathToString","relation","pairToString","hasAttributes","pathExpression","processor","unified","use","gramPresetBasic","src","runSync","toGram","head","tail","nodes","unidentifiedNodes","nodemap","get","push","values","edges","MISSING_ID","graphConstructor","graph","MultiGraph","gram","ops","forEach","mergeNode","target","mergeEdgeWithKey","hasProperties","keys","stringifyAttributes","stringifyNode","stringifyEdge","key","sourceAttributes","targetAttributes","undirected","generatedKey","edgeAttributes","edgeString","stringifiedNodeKeys","Set","forEachDirectedEdge","add","forEachNode"],"mappings":"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"}